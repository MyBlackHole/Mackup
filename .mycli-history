
# 2023-04-03 17:19:40.590900
+show databases;

# 2023-04-03 17:20:01.780043
+create database test;

# 2023-04-03 17:20:05.071528
+show databases;

# 2023-04-03 17:20:14.459122
+use test;

# 2023-04-03 17:23:25.267092
+exit;

# 2023-04-03 17:23:42.649363
+show databases;

# 2023-04-03 17:23:58.031584
+exit

# 2023-04-03 17:26:41.282888
+show databases;

# 2023-04-03 17:26:48.043220
+use test;

# 2023-04-03 17:47:58.585704
+show databases;

# 2023-04-03 17:49:02.712585
+status

# 2023-04-03 17:50:16.050273
+use mysql;

# 2023-04-03 17:50:22.971718
+exit;

# 2023-04-03 18:12:00.738887
+use test;

# 2023-04-03 18:12:01.566613
+ls

# 2023-04-03 18:12:17.078409
+show tables;

# 2023-04-03 18:15:30.569853
+create table test(i int, j int);

# 2023-04-03 18:16:26.218730
+create table test(id int,name varchar(233));

# 2023-04-03 18:16:44.586278
+show tables;

# 2023-04-03 18:17:11.349562
+create table test(id int,name varchar(233));

# 2023-04-03 18:17:34.485947
+create database tes11112;

# 2023-04-03 18:17:42.276142
+show databases;

# 2023-04-03 18:17:58.596388
+drop database tes11112;

# 2023-04-04 14:18:32.162868
+use test;

# 2023-04-04 17:51:21.935603
+select * from information_schema.innodb_sys_datafiles;

# 2023-04-04 17:56:33.150388
+show databases;

# 2023-04-04 17:56:45.803190
+select * from information_schema.innodb_sys_datafiles;

# 2023-04-04 17:57:02.878443
+select * from information_schema;

# 2023-04-04 17:57:09.363451
+use information_schema;

# 2023-04-04 17:57:12.036053
+show tables;

# 2023-04-04 17:58:07.428552
+select * from `INNODB_FIELDS`;

# 2023-04-04 17:58:38.504719
+select * from `ADMINISTRABLE_ROLE_AUTHORIZATIONS`;

# 2023-04-04 17:58:47.596672
+show columns table `APPLICABLE_ROLES`;

# 2023-04-04 17:58:57.019930
+show table `APPLICABLE_ROLES` column;

# 2023-04-04 17:59:34.395543
+show databases;

# 2023-04-04 17:59:38.184926
+use information_schema;

# 2023-04-04 18:00:28.006620
+show global start;

# 2023-04-04 18:00:42.087786
+show global start like 'Threads_connected'

# 2023-04-04 18:33:05.707566
+show databases;

# 2023-04-04 18:33:33.810800
+use test;

# 2023-04-04 18:33:41.315367
+show table;

# 2023-04-04 18:33:48.925164
+show tables;

# 2023-04-04 18:33:58.769676
+select * from t1;

# 2023-04-04 18:34:10.369865
+insert into t1 values(1, 1)

# 2023-04-04 18:34:12.906178
+insert into t1 values(1, 1);

# 2023-04-04 18:34:25.612668
+show columns table t1;

# 2023-04-06 09:27:49.343317
+show tables;

# 2023-04-06 09:27:52.178076
+show databases;

# 2023-04-06 09:28:12.960285
+use mds;

# 2023-04-06 09:28:15.091059
+show tables;

# 2023-04-06 09:29:33.957988
+select * from bucket_batch_info;

# 2023-04-06 09:29:44.221023
+select * from gtid_report_info;

# 2023-04-06 09:31:05.850663
+select * from loadserver_permission;

# 2023-04-06 09:31:20.459975
+select * from cluster_proxy_bind_info;

# 2023-04-06 09:31:30.842530
+use cm;

# 2023-04-06 09:31:32.849200
+show tables;

# 2023-04-06 09:31:51.567266
+select * from data_snapshot;

# 2023-04-06 09:32:01.565399
+select * from modify_dbpwd_info;

# 2023-04-06 09:32:07.247953
+show databases;

# 2023-04-06 09:32:25.388243
+use mds;

# 2023-04-06 09:32:26.596232
+show databases;

# 2023-04-06 09:32:30.300841
+show tables;

# 2023-04-06 09:32:55.323363
+select * from table_index_info;

# 2023-04-06 09:33:20.806828
+select * from redistribution_table_info;

# 2023-04-06 09:33:36.571377
+select * from db_info;

# 2023-04-06 09:34:13.795933
+select * from metadata_version_info;

# 2023-04-06 09:34:40.168228
+select * from gtm_db_bind_info;

# 2023-04-06 09:34:53.306146
+select * from dictionary_info;

# 2023-04-06 09:35:23.147949
+select * from manager_move_bucket_info;

# 2023-04-06 09:35:35.197843
+select * from group_info;

# 2023-04-06 09:36:06.075651
+select * from whiteblackip_info;

# 2023-04-06 09:36:15.664798
+select * from dbpasswd_version_info;

# 2023-04-06 09:36:45.468104
+select * from gtm_group_info;

# 2023-04-06 09:36:55.198633
+show tables;

# 2023-04-06 09:37:08.806778
+select * from proxy_info;

# 2023-04-06 09:40:11.901630
+ls

# 2023-04-07 16:22:07.792624
+show databases;

# 2023-04-07 16:22:17.148461
+use UDALTEST;

# 2023-04-07 16:22:19.984772
+show tables;

# 2023-04-07 16:59:24.895695
+show databases;

# 2023-04-07 16:59:28.152537
+use UDALTEST;

# 2023-04-07 16:59:31.137194
+show tables;

# 2023-04-07 16:59:36.364486
+select * from test;

# 2023-04-07 16:59:42.744345
+select * from test2

# 2023-04-07 16:59:49.544463
+select * from _sys_global_sequence_;

# 2023-04-07 16:59:53.745891
+select * from _sys_global_sequence_

# 2023-04-07 17:30:59.028628
+create table test(id int,name varchar(233));

# 2023-04-07 17:31:31.404624
+select * from test2

# 2023-04-07 17:31:41.586049
+ls

# 2023-04-07 17:31:49.053070
+show columns table test;

# 2023-04-07 17:34:12.254649
+select * from test2

# 2023-04-07 17:34:22.130651
+create table test(id int,name varchar(233));

# 2023-04-07 17:34:45.070615
+create table test3(id int,name varchar(233));

# 2023-04-07 17:35:23.356862
+create database test;

# 2023-04-07 17:37:21.377125
+show create table f\G

# 2023-04-07 17:37:31.897328
+show create table test1\G

# 2023-04-07 17:37:41.641164
+show create table test\G

# 2023-04-07 17:37:50.964791
+show create table test

# 2023-04-07 17:37:53.513776
+show create table test\G

# 2023-04-07 17:48:51.541763
+CREATE TABLE IF NOT EXISTS `article` (`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`author_id` int(10) unsigned NOT NULL,
+`category_id` int(10) unsigned NOT NULL,
+`views` int(10) unsigned NOT NULL,
+`comments` int(10) unsigned NOT NULL,
+`title` varbinary(255) NOT NULL,
+`content` text NOT NULL,
+PRIMARY KEY (`id`)
+);

# 2023-04-07 17:49:15.037132
+cd ..

# 2023-04-07 17:49:19.562468
+create database test;

# 2023-04-10 11:33:01.810259
+show databases;

# 2023-04-10 11:33:05.286174
+create database test;

# 2023-04-10 11:41:26.454116
+show create table test\G

# 2023-04-10 11:42:30.347804
+CREATE TABLE IF NOT EXISTS `article` (`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`author_id` int(10) unsigned NOT NULL,
+`category_id` int(10) unsigned NOT NULL,
+`views` int(10) unsigned NOT NULL,
+`comments` int(10) unsigned NOT NULL,
+`title` varbinary(255) NOT NULL,
+`content` text NOT NULL,
+PRIMARY KEY (`id`)
+);

# 2023-04-10 11:42:59.846276
+CREATE TABLE IF NOT EXISTS `article`
+(
+`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`author_id` int(10) unsigned NOT NULL,
+`category_id` int(10) unsigned NOT NULL,
+`views` int(10) unsigned NOT NULL,
+`comments` int(10) unsigned NOT NULL,
+`title` varbinary(255) NOT NULL,
+`content` text NOT NULL,
+PRIMARY KEY (`id`)
+);
+

# 2023-04-10 11:46:58.715873
+CREATE TABLE IF NOT EXISTS `article` (`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`author_id` int(10) unsigned NOT NULL,
+`category_id` int(10) unsigned NOT NULL,
+`views` int(10) unsigned NOT NULL,
+`comments` int(10) unsigned NOT NULL,
+`title` varbinary(255) NOT NULL,
+`content` text NOT NULL,
+PRIMARY KEY (`id`)
+);

# 2023-04-10 11:47:11.121442
+create database test;

# 2023-04-10 11:51:44.979774
+use UDALTEST;

# 2023-04-10 11:51:47.062841
+show tables;

# 2023-04-10 11:51:54.561223
+CREATE TABLE IF NOT EXISTS `article` (`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`author_id` int(10) unsigned NOT NULL,
+`category_id` int(10) unsigned NOT NULL,
+`views` int(10) unsigned NOT NULL,
+`comments` int(10) unsigned NOT NULL,
+`title` varbinary(255) NOT NULL,
+`content` text NOT NULL,
+PRIMARY KEY (`id`)
+);

# 2023-04-10 11:52:11.674593
+select * from test2

# 2023-04-10 11:52:16.580925
+select * from test2\G

# 2023-04-10 11:52:37.349457
+insert into test2 values(1);

# 2023-04-10 11:52:46.880533
+select * from test2\G

# 2023-04-10 11:53:02.928860
+insert into test2 values(1,2,3,4,5,6,7);

# 2023-04-10 11:53:23.930972
+select * from test2\G

# 2023-04-10 11:54:06.756612
+insert into test2 value(1,2,3,4,5,6,7);

# 2023-04-10 11:54:54.682399
+describe test2;

# 2023-04-10 11:55:00.876852
+describe test2\G

# 2023-04-10 11:55:54.737417
+describe test2;

# 2023-04-10 11:56:33.968439
+show create table test\G

# 2023-04-10 11:56:36.541747
+show create table test

# 2023-04-10 11:56:38.255880
+show create table test\G

# 2023-04-10 11:58:26.213555
+INSERT INTO `test`
+(`author_id`, `category_id`, `views`, `comments`, `title`, `content`) VALUES
+(1, 1, 1, 1, '1', '1'),
+(2, 2, 2, 2, '2', '2'),
+(1, 1, 3, 3, '3', '3');

# 2023-04-10 11:58:38.985367
+insert into test2 value(2,3,4,5,6,7);

# 2023-04-10 11:58:54.261286
+insert into test2 values(2,3,4,5,6,7);

# 2023-04-10 11:59:37.258145
+insert into test2 (author_id, category_id, views, `comments`, title, content) values(2,3,4,5,6,7);

# 2023-04-10 12:01:21.664178
+select * from test2

# 2023-04-10 12:02:13.199267
+begin

# 2023-04-10 12:02:39.309225
+commit

# 2023-04-10 12:02:44.631253
+begin

# 2023-04-10 12:02:55.444213
+start TRANSACTION;

# 2023-04-10 13:24:25.596497
+show variables like 'innodb_support_xa';

# 2023-04-10 13:35:43.551494
+show tables;

# 2023-04-10 13:35:54.680761
+select * from article

# 2023-04-10 13:36:06.192508
+show create table article\G

# 2023-04-10 13:37:23.089292
+insert into article values(1, 10, "foo")

# 2023-04-10 13:37:30.548661
+insert into article values(1, 10, "foo");

# 2023-04-10 13:37:42.134662
+insert into article values(10, "foo");

# 2023-04-10 13:38:05.039762
+insert into article (score, `name`) values(10, "foo");

# 2023-04-10 13:39:18.887498
+select * from article

# 2023-04-10 13:40:39.176551
+show databases;

# 2023-04-10 13:40:58.462677
+show variables like 'innodb_support_xa';

# 2023-04-10 13:42:47.082597
+set innodb_support_xa=ON

# 2023-04-10 13:49:33.465461
+xa start 1000

# 2023-04-10 13:53:19.659926
+show variables;

# 2023-04-10 13:54:04.261183
+show variables like 'xa';

# 2023-04-10 13:54:10.281150
+show variables like '%xa%';

# 2023-04-10 13:55:49.888660
+xa start 1000

# 2023-04-10 13:56:52.389137
+xa start '1000'

# 2023-04-10 13:57:33.606391
+xa commit '1000'

# 2023-04-10 13:58:01.413235
+xa stop '1000'

# 2023-04-10 13:58:46.295618
+xa commit '1000';

# 2023-04-10 13:59:09.083858
+xa recover;

# 2023-04-10 13:59:56.503127
+CREATE TABLE `user` (
+`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`score` int(10) unsigned NOT NULL,
+`name` varbinary(255) NOT NULL,
+PRIMARY KEY (`id`)
+);
+

# 2023-04-10 14:00:02.318330
+show databases;

# 2023-04-10 14:00:15.525839
+create database test_xa;

# 2023-04-10 14:00:46.485533
+xa end '1000';

# 2023-04-10 14:00:48.749868
+create database test_xa;

# 2023-04-10 14:04:59.247234
+xa end;

# 2023-04-10 14:05:04.858817
+xa end '1000';

# 2023-04-10 14:05:11.311753
+create database test_xa;

# 2023-04-10 14:07:30.322734
+xa commit '1000';

# 2023-04-10 14:07:35.059230
+create database test_xa;

# 2023-04-10 14:07:51.665109
+xa rollback '1000';

# 2023-04-10 14:07:57.854911
+create database test_xa;

# 2023-04-10 14:08:57.920955
+xa recover;

# 2023-04-10 14:11:45.090094
+use test_xa

# 2023-04-10 14:12:03.545412
+CREATE TABLE `user` (
+`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
+`score` int(10) unsigned NOT NULL,
+`name` varbinary(255) NOT NULL,
+PRIMARY KEY (`id`)
+);

# 2023-04-10 14:13:04.254441
+show tables;

# 2023-04-10 14:14:45.688953
+xa start '1000';

# 2023-04-10 14:15:02.974458
+insert into user values(10, "foo");

# 2023-04-10 14:15:09.997452
+insert into user values(1, 10, "foo");

# 2023-04-10 14:15:24.450421
+xa recover;

# 2023-04-10 14:15:41.319486
+select * from `user`;

# 2023-04-10 14:16:00.915753
+xa recover\G

# 2023-04-10 14:17:43.886453
+xa PREPARE '1000';

# 2023-04-10 14:18:00.345430
+xa end '1000';

# 2023-04-10 14:18:13.872569
+xa PREPARE '1000';

# 2023-04-10 14:18:27.789328
+xa recover\G

# 2023-04-10 14:18:32.060511
+xa recover;

# 2023-04-10 14:19:27.048243
+xa commit '1000';

# 2023-04-10 14:19:35.428707
+xa recover;

# 2023-04-10 14:19:40.211304
+xa recover\G

# 2023-04-10 14:20:16.083576
+select * from `user`;

# 2023-04-10 14:20:36.772822
+xa start '1000000';

# 2023-04-10 14:20:52.089320
+insert into user values(1, 10, "foo0");

# 2023-04-10 14:21:08.445883
+insert into user values(2, 10, "foo00");

# 2023-04-10 14:21:19.724464
+xa end '1000000';

# 2023-04-10 14:21:39.668533
+use test_xa;

# 2023-04-10 14:21:42.538337
+show tables;

# 2023-04-10 14:21:44.220889
+select * from `user`;

# 2023-04-10 14:21:49.872779
+select * from `user`;

# 2023-04-10 14:22:19.020385
+xa PREPARE '1000000';

# 2023-04-10 14:22:21.017216
+select * from `user`;

# 2023-04-10 14:22:45.501716
+xa recover\G

# 2023-04-10 14:23:01.088548
+xa commit '1000000';

# 2023-04-10 14:23:02.618274
+select * from `user`;

# 2023-04-10 14:30:09.057157
+use test_xa;

# 2023-04-10 14:30:10.595052
+select * from `user`;

# 2023-04-10 14:38:19.450087
+select *,_rowid from `user`;

# 2023-04-10 14:39:31.025009
+select *,_rowid,_gtid from `user`;

# 2023-04-10 14:39:34.369667
+select *,_rowid,_gtxid from `user`;

# 2023-04-10 14:40:28.769792
+select *,_rowid,_xid from `user`;

# 2023-04-10 14:40:33.703203
+select *,_rowid,_maxid from `user`;

# 2023-04-10 14:42:03.077289
+select *,_rowid,_trxid from `user`;

# 2023-04-10 14:42:06.700219
+select *,_rowid,_trx_id from `user`;

# 2023-04-10 14:42:10.336017
+select *,_rowid,trxid from `user`;

# 2023-04-10 14:47:18.410614
+select *,_rowid,trx_id from `user`;

# 2023-04-10 14:47:26.607565
+select *,_rowid,_trx_id from `user`;

# 2023-04-10 14:48:30.724754
+select *,_rowid from `user`;

# 2023-04-10 14:50:49.494586
+update `user` set name = 'black' where id=1;

# 2023-04-10 14:50:51.584379
+select *,_rowid from `user`;

# 2023-04-10 14:51:33.611701
+savepoint

# 2023-04-10 14:52:59.916477
+flush

# 2023-04-10 14:54:38.886788
+select *,_rowid from `user`;

# 2023-04-10 14:55:06.018060
+show variables like '%data%';

# 2023-04-10 15:15:46.759176
+xa start '1000';

# 2023-04-10 15:16:28.919513
+xa RECOVER;

# 2023-04-10 15:22:14.503846
+xa start '1000';

# 2023-04-10 16:03:03.555646
+setxa=on

# 2023-04-10 16:36:45.989079
+udal xa start '1000';

# 2023-04-10 16:40:52.299174
+insert into article (score, `name`) values(10, "foo");

# 2023-04-10 16:40:59.283020
+select * from article

# 2023-04-10 16:41:13.257837
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 16:41:36.633075
+select * from article

# 2023-04-10 16:41:40.464430
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 16:41:49.009552
+select * from article

# 2023-04-10 16:42:36.170794
+udal xa end '1000';

# 2023-04-10 16:42:39.667013
+udal xa end;

# 2023-04-10 16:43:05.779600
+udal xa end 'dbproxy-0746814c-1';

# 2023-04-10 16:43:28.680575
+xa end;

# 2023-04-10 16:43:53.832788
+udal xa recover;

# 2023-04-10 16:46:03.303604
+udal xa recover schedule;

# 2023-04-10 16:46:54.111163
+udal xa end;

# 2023-04-10 16:56:49.970305
+udal xa end '1000';

# 2023-04-10 16:59:46.908570
+xa end '1000';

# 2023-04-10 17:00:25.053663
+udal xa commit '1000';

# 2023-04-10 17:00:48.963072
+udal xa commit 'dbproxy-0746814c-1';;

# 2023-04-10 17:00:52.610509
+udal xa commit 'dbproxy-0746814c-1';

# 2023-04-10 17:05:04.113064
+udal xa commit 'dbproxy-0746814c-1' where dn=1;

# 2023-04-10 17:05:17.079364
+help

# 2023-04-10 17:05:30.302975
+help xa

# 2023-04-10 17:05:40.163940
+help udal

# 2023-04-10 17:06:39.464676
+udal xa commit 'dbproxy-0746814c-1' where dn='DN1';

# 2023-04-10 17:14:46.346347
+udal xa commit 'dbproxy-0746814c-1' where dn='udaltest_1';

# 2023-04-10 17:15:08.607232
+udal xa commit '1000' where dn='udaltest_1';

# 2023-04-10 17:15:22.896281
+udal xa recover;

# 2023-04-10 17:16:05.614362
+select * from article

# 2023-04-10 17:16:23.084412
+udal xa start;

# 2023-04-10 17:16:35.435426
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 17:16:37.536342
+select * from article

# 2023-04-10 17:16:44.681007
+udal xa end;

# 2023-04-10 17:17:00.723551
+udal xa end 'dbproxy-0746814c-2':

# 2023-04-10 17:17:03.581547
+udal xa end 'dbproxy-0746814c-2';

# 2023-04-10 17:17:21.084683
+udal xa commit 'dbproxy-0746814c-2';

# 2023-04-10 17:17:29.187188
+udal xa recover;

# 2023-04-10 17:17:37.033464
+udal xa commit 'dbproxy-0746814c-2';

# 2023-04-10 17:18:07.512353
+udal xa commit 'dbproxy-0746814c-2' where DN="udaltest_1";

# 2023-04-10 17:18:13.608324
+udal xa commit 'dbproxy-0746814c-2' where DN='udaltest_1';

# 2023-04-10 17:19:22.534030
+udal xa commit 'dbproxy-0746814c-2' where DN='udaltest';

# 2023-04-10 17:19:32.099112
+udal xa commit 'dbproxy-0746814c-2' where DN='udaltest_2';

# 2023-04-10 17:19:34.705646
+udal xa commit 'dbproxy-0746814c-2' where DN='udaltest_3';

# 2023-04-10 17:19:43.817961
+udal xa recover;

# 2023-04-10 17:48:00.770578
+udal help

# 2023-04-10 17:48:08.123636
+help udal

# 2023-04-10 17:48:10.698894
+udal

# 2023-04-10 17:48:13.299280
+udal --help

# 2023-04-10 17:48:27.151069
+udal show session

# 2023-04-10 17:49:42.569415
+udal xa recover;

# 2023-04-10 17:49:44.819040
+select * from article

# 2023-04-10 17:59:58.955978
+udal xa start;

# 2023-04-10 18:00:12.154112
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 18:00:13.728923
+select * from article

# 2023-04-10 18:00:25.294187
+xa end 'dbproxy-0746814c-3';

# 2023-04-10 18:00:31.982664
+xa commit 'dbproxy-0746814c-3';

# 2023-04-10 18:00:56.999092
+xa PREPARE 'dbproxy-0746814c-3';

# 2023-04-10 18:01:04.509959
+udal xa PREPARE 'dbproxy-0746814c-3';

# 2023-04-10 18:05:45.011286
+select * from article

# 2023-04-10 18:10:12.991993
+udal xa start;

# 2023-04-10 18:10:15.828296
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 18:10:29.919567
+udal xa END 'dbproxy-0746814c-4';

# 2023-04-10 18:10:34.062170
+xa END 'dbproxy-0746814c-4';

# 2023-04-10 18:10:40.064816
+xa END;

# 2023-04-10 18:10:48.573252
+udal xa END 'dbproxy-0746814c-4';

# 2023-04-10 18:13:22.635365
+udal xa 'dbproxy-0746814c-4';

# 2023-04-10 18:13:35.705750
+udal xa commit 'dbproxy-0746814c-4';

# 2023-04-10 18:14:06.064291
+udal xa commit 1 'dbproxy-0746814c-4';

# 2023-04-10 18:32:49.617828
+udal xa recover;

# 2023-04-10 18:39:21.574702
+udal xa start;

# 2023-04-10 18:39:25.823873
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 18:39:37.186935
+udal xa recover;

# 2023-04-10 18:40:20.469134
+udal xa comment;

# 2023-04-10 18:40:42.636918
+udal xa comment "111";

# 2023-04-10 18:41:51.964276
+xa comment "111";

# 2023-04-10 18:51:07.185952
+xa commit 'dbproxy-0746814c-4';

# 2023-04-10 18:51:19.600556
+xa commit;

# 2023-04-10 18:52:49.432174
+udal xa start;

# 2023-04-10 18:52:54.087677
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 18:53:02.183591
+udal xa recover;

# 2023-04-10 18:53:22.851725
+udal xa end "dbproxy-0746814c-6";

# 2023-04-10 18:53:53.611432
+udal xa commit "dbproxy-0746814c-6";

# 2023-04-10 18:53:55.304058
+udal xa recover;

# 2023-04-10 18:54:20.914562
+udal xa commit "dbproxy-0746814c-6" where DN='dbproxy';

# 2023-04-10 18:54:50.392152
+udal xa commit "dbproxy-0746814c-6" where DN='DN11';

# 2023-04-10 18:57:57.441520
+udal xa commit 'dbproxy-0746814c-6' where DN='DN11';

# 2023-04-10 18:58:37.454141
+udal xa commit 'dbproxy-0746814c-6' where DN='udaltest';

# 2023-04-10 18:58:53.787929
+udal xa recover;

# 2023-04-10 18:59:00.497296
+udal xa start;

# 2023-04-10 18:59:07.146436
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 18:59:09.007610
+udal xa recover;

# 2023-04-10 18:59:14.665581
+udal xa commit 'dbproxy-0746814c-7' where DN='udaltest';

# 2023-04-10 18:59:19.660664
+udal xa recover;

# 2023-04-10 18:59:28.434744
+udal xa end 'dbproxy-0746814c-7' where DN='udaltest';

# 2023-04-10 18:59:44.560126
+udal xa PREPARE 'dbproxy-0746814c-7' where DN='udaltest';

# 2023-04-10 18:59:52.826485
+udal xa PREPARE 'dbproxy-0746814c-7';

# 2023-04-10 19:00:03.791214
+udal xa PREPARE 'dbproxy-0746814c-7' where DN='udaltest';

# 2023-04-10 19:00:10.215874
+udal xa END 'dbproxy-0746814c-7' where DN='udaltest';

# 2023-04-10 19:03:52.260980
+begin

# 2023-04-10 19:07:13.415415
+xa start;

# 2023-04-10 19:07:23.095539
+xa start '10000000';

# 2023-04-10 19:08:43.149970
+udal xa start;

# 2023-04-10 19:08:48.013523
+insert into article (score, `name`) values(1000, "foo00");

# 2023-04-10 19:08:49.484389
+select * from article

# 2023-04-10 19:08:53.356477
+insert into article (score, `name`) values(1000, "foo00000");

# 2023-04-10 19:09:52.621793
+select * from article

# 2023-04-10 19:10:03.920677
+xa commit;

# 2023-04-10 19:10:14.424691
+commit;

# 2023-04-10 19:12:12.556822
+udal xa recover;

# 2023-04-11 09:35:16.353649
+show databases;

# 2023-04-11 09:35:21.480073
+use UDALTEST;

# 2023-04-11 09:37:38.774173
+udal xa start;

# 2023-04-11 09:38:01.122908
+insert into article (score, `name`) values(1000000, "test xa");

# 2023-04-11 09:38:07.356833
+udal xa recover;

# 2023-04-11 09:38:14.569779
+select * from article

# 2023-04-11 09:38:21.049383
+commit;

# 2023-04-11 09:38:23.626450
+udal xa recover;

# 2023-04-11 09:47:41.346679
+show tables;

# 2023-04-11 09:47:52.008010
+select * from _sys_global_sequence_;

# 2023-04-11 09:49:50.577226
+show tables;

# 2023-04-11 09:49:58.886275
+select * from user;

# 2023-04-11 09:51:14.321990
+udal xa start;

# 2023-04-11 09:51:47.813020
+insert into article (score, `name`) values(10, "black");

# 2023-04-11 09:51:53.363311
+select * from article;

# 2023-04-11 09:52:08.944787
+insert into user (score, `name`) values(10, "hole");

# 2023-04-11 09:52:30.802713
+udal xa recover;

# 2023-04-11 09:52:39.926387
+insert into user (score, `name`) values(100, "hole");

# 2023-04-11 09:52:52.551669
+udal xa recover;

# 2023-04-11 09:53:05.835691
+commit;

# 2023-04-11 09:53:48.962656
+select * from article;

# 2023-04-11 09:53:52.152022
+select * from user;

# 2023-04-11 09:56:51.286514
+insert into user (score, `name`) values(100, "hole") id = 3;

# 2023-04-11 09:57:03.326887
+insert into user (id, score, `name`) values(3, 100, "hole");

# 2023-04-11 09:57:08.169504
+insert into user (id, score, `name`) values(1, 100, "hole");

# 2023-04-11 09:57:11.332930
+select * from user;

# 2023-04-11 10:00:53.660202
+udal xa start;

# 2023-04-11 10:00:58.464932
+udal dt start;

# 2023-04-11 10:02:19.071488
+rollback

# 2023-04-11 10:02:23.746352
+udal dt start;

# 2023-04-11 10:02:41.216014
+insert into user (id, score, `name`) values(5, 10000, "hole5");

# 2023-04-11 10:02:46.885704
+insert into user (id, score, `name`) values(7, 10000, "hole5");

# 2023-04-11 10:02:55.945389
+udal dt recover;

# 2023-04-11 10:03:13.574684
+commit;

# 2023-04-11 10:05:55.083736
+begin

# 2023-04-11 10:06:02.571984
+udal begin;

# 2023-04-11 10:07:41.750129
+dt status "teledb04-1681178544061-100000";

# 2023-04-11 10:07:50.267419
+dt status 'teledb04-1681178544061-100000';

# 2023-04-11 10:07:55.905255
+udal dt status 'teledb04-1681178544061-100000';

# 2023-04-11 10:08:44.424307
+dt start user;

# 2023-04-11 10:09:02.783983
+dt status 'teledb04-1681178925301-user';

# 2023-04-11 10:09:11.569938
+dt status tid;

# 2023-04-11 10:09:26.605089
+show warnings

# 2023-04-11 10:09:35.150554
+insert into user (id, score, `name`) values(8, 10000, "hole5");

# 2023-04-11 10:09:38.778125
+insert into user (id, score, `name`) values(9, 10000, "hole5");

# 2023-04-11 10:09:42.480415
+show warnings

# 2023-04-11 10:10:11.820441
+commit;

# 2023-04-11 10:10:24.564162
+udal xa recover;

# 2023-04-11 10:10:28.892754
+udal dt recover;

# 2023-04-11 10:12:55.990360
+select * from user;

# 2023-04-11 10:13:47.018433
+dt status tid;

# 2023-04-11 10:14:30.645768
+dt status 'teledb04-1681178925301-user';

# 2023-04-11 10:15:24.843414
+udal dt status 'teledb04-1681178925301-user';

# 2023-04-11 10:19:57.186576
+udal xa start;

# 2023-04-11 10:20:08.811204
+insert into user (id, score, `name`) values(10, 10000, "hole5");

# 2023-04-11 10:20:12.413019
+insert into user (id, score, `name`) values(11, 10000, "hole5");

# 2023-04-11 10:20:51.098995
+insert into user (id, score, `name`) values(12, 10000, "hole5");

# 2023-04-11 10:20:54.643424
+insert into user (id, score, `name`) values(13, 10000, "hole5");

# 2023-04-11 10:20:58.304064
+insert into user (id, score, `name`) values(14, 10000, "hole5");

# 2023-04-11 10:21:03.440718
+insert into user (id, score, `name`) values(15, 10000, "hole5");

# 2023-04-11 10:21:06.906373
+insert into user (id, score, `name`) values(16, 10000, "hole5");

# 2023-04-11 10:21:10.772170
+insert into user (id, score, `name`) values(17, 10000, "hole5");

# 2023-04-11 10:22:53.551283
+udal xa recover;

# 2023-04-11 10:32:09.825656
+insert into user (id, score, `name`) values(18, 10000, "hole5", 19, 1000, 'black);

# 2023-04-11 10:32:24.909282
+insert into user (id, score, `name`) values(18, 10000, "hole5", 2, 3);

# 2023-04-11 10:32:45.018589
+insert into user (id, score, `name`) values(18, 10000, "hole5", 2, 3) id=1;

# 2023-04-11 10:32:51.397028
+insert into user (id, score, `name`) values(18, 10000, "hole5", 2, 3) id=18;

# 2023-04-11 10:32:55.809832
+insert into user (id, score, `name`) values(18, 10000, "hole5") id=18;

# 2023-04-11 10:33:08.895390
+insert into user (id, score, `name`) values(18, 10000, "hole5") id=19;

# 2023-04-11 10:33:57.206879
+udal show session

# 2023-04-11 11:40:41.769421
+udal xa start;

# 2023-04-11 11:40:52.600681
+insert into user (id, score, `name`) values(19, 10000, "hole5");

# 2023-04-11 11:40:59.217462
+insert into user (id, score, `name`) values(20, 10000, "hole5");

# 2023-04-11 11:41:04.569129
+insert into user (id, score, `name`) values(21, 10000, "hole5");

# 2023-04-11 11:41:10.268387
+udal xa recover;

# 2023-04-11 11:41:23.307479
+select * from user;

# 2023-04-11 11:41:29.400614
+commit;

# 2023-04-11 11:42:19.055308
+select * from user;

# 2023-04-11 11:56:06.306310
+show databases;

# 2023-04-11 14:52:26.427837
+show warnings

# 2023-04-11 15:35:11.721611
+show global start like 'binlog'

# 2023-04-11 15:35:16.389074
+show global start like 'binlog%'

# 2023-04-11 15:35:23.831949
+show global status like 'binlog%'

# 2023-04-11 15:38:36.724195
+show engine INNODB STATUS

# 2023-04-11 15:38:39.906537
+show engine INNODB STATUS\G

# 2023-04-11 15:45:54.630236
+show binlog events in 'binlog.000002';

# 2023-04-11 15:46:02.032733
+show binlog events in 'binlog.000001';

# 2023-04-11 15:46:07.650535
+show binlog events in 'binlog.000009';

# 2023-04-11 15:46:11.075880
+show binlog events in 'binlog.000008';

# 2023-04-11 15:47:18.121628
+show master status\G

# 2023-04-11 15:48:00.360941
+show master status

# 2023-04-11 15:48:31.033077
+show binary logs;

# 2023-04-11 15:53:51.694405
+udal xa start;

# 2023-04-11 15:54:12.613867
+select * from user;

# 2023-04-11 15:54:26.990105
+delete from user where id=3;

# 2023-04-11 15:54:33.278108
+commit;

# 2023-04-11 15:54:37.779821
+udal xa recover;

# 2023-04-11 16:15:46.582517
+udal show sequence

# 2023-04-11 16:19:27.223819
+udal show help

# 2023-04-11 16:28:13.693217
+udal xa start;

# 2023-04-11 16:28:21.085835
+insert into user (id, score, `name`) values(22, 10000, "hole5");

# 2023-04-11 16:28:25.735150
+insert into user (id, score, `name`) values(23, 10000, "hole5");

# 2023-04-11 16:28:29.663897
+insert into user (id, score, `name`) values(24, 10000, "hole5");

# 2023-04-11 16:28:34.177240
+insert into user (id, score, `name`) values(25, 10000, "hole5");

# 2023-04-11 16:28:45.424819
+udal xa recover;

# 2023-04-11 16:28:51.482208
+commit;

# 2023-04-12 10:27:54.604599
+udal help

# 2023-04-12 10:28:00.638484
+udal show help

# 2023-04-12 10:28:46.049786
+UDAL DT SHOW VARIABLES;

# 2023-04-12 10:31:29.583990
+UDAL DT SHOW BKLOCK;

# 2023-04-12 10:31:41.643732
+UDAL DT START;

# 2023-04-12 10:31:43.127992
+UDAL DT SHOW BKLOCK;

# 2023-04-12 10:32:15.868758
+insert into user (id, score, `name`) values(28, 10000, "hole5");

# 2023-04-12 10:32:20.166023
+insert into user (id, score, `name`) values(30, 10000, "hole5");

# 2023-04-12 10:32:25.417348
+use UDALTEST;

# 2023-04-12 10:32:27.475782
+insert into user (id, score, `name`) values(30, 10000, "hole5");

# 2023-04-12 10:32:32.031115
+UDAL DT SHOW BKLOCK;

# 2023-04-12 10:32:52.820065
+UDAL DT SHOW COMPENSATION;

# 2023-04-12 10:33:52.869546
+udal show help

# 2023-04-12 10:34:40.230050
+UDAL XA RECOVER

# 2023-04-12 10:34:44.292962
+udal show help

# 2023-04-12 10:34:59.879520
+UDAL DT SHOW LOCK

# 2023-04-12 10:35:02.094555
+udal show help

# 2023-04-12 10:35:14.595396
+UDAL DT SHOW COMPENSATION;

# 2023-04-12 10:35:19.699267
+udal show help

# 2023-04-12 10:36:03.054841
+UDAL SHOW LVS ZOOKEEPER

# 2023-04-12 10:36:04.571894
+select * from user;

# 2023-04-12 10:42:32.247478
+udal show help

# 2023-04-12 10:42:53.124222
+UDAL SHOW SESSION

# 2023-04-12 10:42:55.431383
+udal show help

# 2023-04-12 10:43:39.086945
+UDAL SET SEQUENCE VALUE = 'value' WHERE SCHEMA = 'schema' AND SEQUENCE = 'sequence'

# 2023-04-12 10:45:52.858430
+udal show help

# 2023-04-12 11:04:03.580430
+UDAL DT SHOW LOCK

# 2023-04-12 11:04:17.132351
+UDAL DT SHOW COMPENSATION;

# 2023-04-12 11:04:48.011864
+UDAL DT START;

# 2023-04-12 11:05:20.908081
+insert into user (id, score, `name`) values(30, 10000, "hole5");

# 2023-04-12 11:05:43.480012
+commit;

# 2023-04-12 11:05:55.457212
+UDAL DT SHOW COMPENSATION;

# 2023-04-12 11:06:07.710632
+UDAL DT START;

# 2023-04-12 11:06:17.229886
+insert into user (id, score, `name`) values(30, 10000, "hole5");

# 2023-04-12 11:06:20.352006
+insert into user (id, score, `name`) values(31, 10000, "hole5");

# 2023-04-12 11:06:22.655925
+UDAL DT SHOW COMPENSATION;

# 2023-04-12 11:07:17.673357
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:13:12.840088
+SHOW WARNINGS;

# 2023-04-12 11:13:37.493002
+UDAL DT START;

# 2023-04-12 11:13:44.612009
+UDAL DT START user;

# 2023-04-12 11:14:33.751794
+select * from user;

# 2023-04-12 11:15:05.310937
+rollback

# 2023-04-12 11:15:06.839560
+select * from user;

# 2023-04-12 11:15:29.538276
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:16:00.902677
+UDAL DT START user;

# 2023-04-12 11:18:30.125467
+UDAL SHOW HOLE

# 2023-04-12 11:18:33.813614
+UDAL SHOW HELP

# 2023-04-12 11:18:58.695782
+UDAL DT SHOW VARIABLES

# 2023-04-12 11:19:27.856533
+UDAL SHOW HELP

# 2023-04-12 11:19:51.019723
+UDAL DT SET compensation_lock='on';

# 2023-04-12 11:20:02.778052
+UDAL DT START;

# 2023-04-12 11:20:07.739510
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:20:10.548479
+UDAL DT SHOW LOCK;

# 2023-04-12 11:20:51.247203
+insert into user (id, score, `name`) values(32, 10000, "hole5");

# 2023-04-12 11:20:53.107912
+UDAL DT SHOW LOCK;

# 2023-04-12 11:20:57.460961
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:21:03.935087
+UDAL DT SHOW VARIABLES

# 2023-04-12 11:21:21.230778
+UDAL DT SET compensation_lock='true';

# 2023-04-12 11:21:22.525266
+UDAL DT SHOW VARIABLES

# 2023-04-12 11:21:33.903949
+UDAL DT SHOW LOCK;

# 2023-04-12 11:21:41.320422
+UDAL DT START;

# 2023-04-12 11:21:42.874988
+UDAL DT SHOW LOCK;

# 2023-04-12 11:21:46.880319
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:21:51.465019
+insert into user (id, score, `name`) values(34, 10000, "hole5");

# 2023-04-12 11:21:53.207729
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:21:55.176428
+UDAL DT SHOW LOCK;

# 2023-04-12 11:22:00.240376
+UDAL DT SHOW VARIABLES

# 2023-04-12 11:22:47.857637
+insert into user (id, score, `name`) values(35, 10000, "hole5");

# 2023-04-12 11:22:51.590494
+insert into user (id, score, `name`) values(36, 10000, "hole5");

# 2023-04-12 11:22:55.772895
+UDAL DT SHOW VARIABLES

# 2023-04-12 11:22:58.770818
+UDAL DT SHOW LOCK;

# 2023-04-12 11:23:01.860122
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:24:21.654531
+UDAL DT START;

# 2023-04-12 11:24:25.296913
+insert into user (id, score, `name`) values(36, 10000, "hole5");

# 2023-04-12 11:24:30.318942
+insert into user (id, score, `name`) values(37, 10000, "hole5");

# 2023-04-12 11:24:32.999977
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:24:35.535724
+UDAL DT SHOW LOCK;

# 2023-04-12 11:24:38.070497
+select * from user;

# 2023-04-12 11:24:42.522549
+delete from user where id=1;

# 2023-04-12 11:24:45.956467
+UDAL DT SHOW LOCK;

# 2023-04-12 11:24:52.627717
+delete from user where id=20;

# 2023-04-12 11:24:57.908459
+delete from user where id=22;

# 2023-04-12 11:25:01.098132
+delete from user where id=2;

# 2023-04-12 11:25:03.912431
+select * from user;

# 2023-04-12 11:25:09.340697
+delete from user where id=37;

# 2023-04-12 11:25:11.809114
+select * from user;

# 2023-04-12 11:25:14.952416
+UDAL DT SHOW LOCK;

# 2023-04-12 11:25:21.531122
+UDAL DT SHOW BKLOCK;

# 2023-04-12 11:29:06.761735
+UDAL XA START;

# 2023-04-12 11:30:38.126425
+commit;

# 2023-04-12 11:33:02.962318
+UDAL XA START;

# 2023-04-12 11:33:10.383405
+insert into user (id, score, `name`) values(37, 10000, "hole5");

# 2023-04-12 11:33:13.765283
+insert into user (id, score, `name`) values(38, 10000, "hole5");

# 2023-04-12 11:33:17.085021
+insert into user (id, score, `name`) values(39, 10000, "hole5");

# 2023-04-12 11:34:57.426486
+UDAL XA RECOVER;

# 2023-04-12 11:36:19.541717
+use UDALTEST;

# 2023-04-12 11:36:26.186967
+UDAL XA START;

# 2023-04-12 11:36:47.792697
+UDAL XA RECOVER;

# 2023-04-12 11:37:03.330912
+commit 'dbproxy-0746814c-16';

# 2023-04-12 11:38:47.333611
+insert into user (id, score, `name`) values(39, 10000, "hole5");

# 2023-04-12 11:38:50.665087
+select * from user;

# 2023-04-12 11:38:58.256458
+insert into user (id, score, `name`) values(40, 10000, "hole5");

# 2023-04-12 11:39:01.196252
+insert into user (id, score, `name`) values(41, 10000, "hole5");

# 2023-04-12 11:39:03.911666
+insert into user (id, score, `name`) values(42, 10000, "hole5");

# 2023-04-12 11:50:02.442063
+UDAL XA RECOVER;

# 2023-04-12 13:14:08.662272
+UDAL XA START;

# 2023-04-12 13:14:12.322117
+insert into user (id, score, `name`) values(42, 10000, "hole5");

# 2023-04-12 13:14:16.499433
+insert into user (id, score, `name`) values(41, 10000, "hole5");

# 2023-04-12 13:14:20.572744
+insert into user (id, score, `name`) values(40, 10000, "hole5");

# 2023-04-12 13:16:45.580012
+UDAL XA RECOVER;

# 2023-04-12 13:18:16.452388
+show tables;

# 2023-04-12 13:19:03.488330
+insert into user (id, score, `name`) values(40, 10000, "hole5");

# 2023-04-12 13:20:00.211507
+commit;

# 2023-04-12 13:20:03.513632
+select * from user;

# 2023-04-12 13:30:15.221766
+select * from user;

# 2023-04-12 13:30:22.535952
+select count(1) from user;

# 2023-04-12 13:34:21.169150
+UDAL XA START;

# 2023-04-12 13:34:30.553828
+UDAL XA RECOVER;

# 2023-04-12 13:35:07.329524
+insert into user (id, score, `name`) values(45, 10000, "hole5");

# 2023-04-12 13:35:10.477759
+UDAL XA RECOVER;

# 2023-04-12 13:35:30.267002
+insert into user (id, score, `name`) values(46, 10000, "hole5");

# 2023-04-12 13:35:33.640424
+insert into user (id, score, `name`) values(47, 10000, "hole5");

# 2023-04-12 13:35:42.036980
+commit;

# 2023-04-12 13:45:42.925226
+UDAL XA START;

# 2023-04-12 13:46:05.083696
+insert into user (id, score, `name`) values(49, 10000, "hole5");

# 2023-04-12 13:46:13.023359
+insert into user (id, score, `name`) values(52, 10000, "hole5");

# 2023-04-12 13:46:17.330222
+insert into user (id, score, `name`) values(55, 10000, "hole5");

# 2023-04-12 13:46:22.913689
+insert into user (id, score, `name`) values(58, 10000, "hole5");

# 2023-04-12 13:46:28.570921
+UDAL XA RECOVER;

# 2023-04-12 13:46:39.240195
+COMMIT;

# 2023-04-12 13:48:20.909598
+show databases;

# 2023-04-12 13:50:12.542523
+use test_xa;

# 2023-04-12 13:50:16.597114
+show tables;

# 2023-04-12 13:50:20.591280
+select * from user;

# 2023-04-12 13:50:28.576380
+xa start '10';

# 2023-04-12 13:50:33.334410
+xa recover\G

# 2023-04-12 13:50:42.373250
+insert into user (id, score, `name`) values(58, 10000, "hole5");

# 2023-04-12 13:50:46.827860
+xa recover\G

# 2023-04-12 13:50:49.318886
+commit;

# 2023-04-12 13:51:00.933728
+xa end '10';

# 2023-04-12 13:51:03.379591
+commit;

# 2023-04-12 13:51:07.205665
+xa recover\G

# 2023-04-12 13:51:14.676898
+commit '10';

# 2023-04-12 13:52:06.000174
+xa PREPARE '10';

# 2023-04-12 13:52:08.354763
+xa recover\G

# 2023-04-12 13:52:18.146622
+commit '10';

# 2023-04-12 13:52:32.513147
+xa commit '10';

# 2023-04-12 13:52:41.660678
+xa start '10';

# 2023-04-12 13:52:49.595357
+insert into user (id, score, `name`) values(580, 10000, "hole5");

# 2023-04-12 13:52:54.289543
+xa commit '10';

# 2023-04-12 13:52:58.383492
+xa end '10';

# 2023-04-12 13:53:00.063614
+xa commit '10';

# 2023-04-12 13:53:05.391154
+xa recover\G

# 2023-04-12 13:53:09.513183
+xa commit '10';

# 2023-04-12 13:56:24.995221
+xa commit '10' one phase;

# 2023-04-12 14:03:03.900102
+xa start '10';

# 2023-04-12 14:03:11.014618
+insert into user (id, score, `name`) values(50, 10000, "hole5");

# 2023-04-12 14:03:12.886033
+select * from user;

# 2023-04-12 14:03:26.300772
+rollback

# 2023-04-12 14:03:31.637314
+select * from user;

# 2023-04-12 14:04:00.982952
+use test_xa

# 2023-04-12 14:04:03.564953
+show tables;

# 2023-04-12 14:04:05.065433
+select * from user;

# 2023-04-12 14:04:10.198358
+insert into user (id, score, `name`) values(500, 10000, "hole5");

# 2023-04-12 14:04:19.443412
+select * from user;

# 2023-04-12 14:07:52.350444
+SELECT * from information_schema.INNODB_TRX；

# 2023-04-12 14:08:01.640884
+SELECT * from information_schema.INNODB_TRX

# 2023-04-12 14:09:40.061117
+SELECT * from information_schema.INNODB_TRX

# 2023-04-12 15:41:43.497496
+use teledb

# 2023-04-12 15:41:44.382967
+ls

# 2023-04-12 15:41:46.889465
+show tables;

# 2023-04-12 15:42:48.312400
+select * from monitor_innodb_trx_processlist;

# 2023-04-12 15:42:59.669654
+select * from monitor_innodb_lock_waits;

# 2023-04-12 15:48:58.295234
+select a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id where a.prod_inst_id = 1 and a.res_id = 1 and a.alive = 0 and e.rep1 = 0 limit 1;

# 2023-04-12 16:21:10.726661
+select a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,     concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b     on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d     on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id
+

# 2023-04-12 16:21:43.874366
+select a.prod_inst_id, a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,     concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b     on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d     on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id
+

# 2023-04-12 16:22:35.772490
+select a.res_id, a.prod_inst_id, a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,     concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b     on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d     on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id
+

# 2023-04-12 16:23:08.808234
+select a.alive, a.res_id, a.prod_inst_id, a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,     concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b     on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d     on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id
+

# 2023-04-12 16:24:03.510859
+select e.repl, a.alive, a.res_id, a.prod_inst_id, a.host, a.port, b.sys_user, b.sys_password, b.ssh_port, c.db_ag_user, c.db_ag_password,     concat(a.db_path,'/etc/', d.parameter_group_used,'.cnf') mysqlcnf from db_resource a left join machine_resource b     on a.machine_id = b.id left join db_user_info c on a.res_id = c.res_id left join paas_product d     on a.prod_inst_id = d.prod_inst_id left join monitor_cluster_db_states e on a.prod_inst_id = e.prod_inst_id
+

# 2023-04-12 16:27:17.125616
+describe monitor_cluster_db_states

# 2023-04-12 16:28:01.812000
+select * from monitor_cluster_db_states;

# 2023-04-12 16:59:08.446780
+describe monitor_mysql_replication

# 2023-04-12 17:30:57.240377
+select group_concat(host) zips, zkservice_port zport, zkroot, zkacl_flag, zkacl_user, zkacl_password, engine, user_id from zookeeper_resource where user_id != 0 group by user_id, engine

# 2023-04-12 18:28:19.562509
+select * from machine_resource;

# 2023-04-13 09:18:06.966583
+show tables;

# 2023-04-13 09:18:09.591256
+show databases;

# 2023-04-13 09:18:13.071920
+use teledb;

# 2023-04-13 09:18:18.983366
+use iam;

# 2023-04-13 09:18:21.324808
+show tables;

# 2023-04-13 09:18:56.762106
+use teledb;

# 2023-04-13 09:20:06.031267
+use information_schema;

# 2023-04-13 09:20:07.291477
+show tables;

# 2023-04-13 09:20:38.828259
+select * from `TABLES`;

# 2023-04-13 09:21:26.866684
+use teledb;

# 2023-04-13 09:21:29.612379
+show tables;

# 2023-04-13 10:16:05.858730
+show databases;

# 2023-04-13 10:16:22.357759
+use UDALTEST;

# 2023-04-13 10:16:24.366337
+show tables;

# 2023-04-13 11:36:22.373202
+use UDALTEST;

# 2023-04-13 11:36:24.194645
+show tables;

# 2023-04-13 11:36:28.539819
+select * from user;

# 2023-04-13 11:40:27.147240
+select uuid();

# 2023-04-13 11:42:27.176983
+select * from user;

# 2023-04-13 11:50:59.992182
+UDAL SHOW HELP

# 2023-04-13 11:52:43.401386
+select * from user;

# 2023-04-13 11:56:44.643722
+select count(1) from user;

# 2023-04-13 11:57:19.597825
+UDAL XA RECOVER;

# 2023-04-13 11:58:34.877127
+select count(1) from user;

# 2023-04-13 11:59:06.850445
+select * from user;

# 2023-04-13 12:00:42.777694
+UDAL XA START;insert into user (score, name) values(RAND() * 100, 'test1');insert into user (score, name) values(RAND() * 100, 'test1');COMMIT;

# 2023-04-13 12:01:08.267342
+UDAL XA START;insert into user (score, name) values(RAND() * 100, 'test1');insert into user (score, name) values(RAND() * 100, 'test1');COMMIT;UDAL XA START;insert into user (score, name) values(RAND() * 100, 'test1');insert into user (score, name) values(RAND() * 100, 'test1');COMMIT;

# 2023-04-13 13:03:10.510906
+UDAL XA START;insert into user (score, name) values(RAND() * 100, 'test1');insert into user (score, name) values(RAND() * 100, 'test1');COMMIT;UDAL XA START;insert into user (score, name) values(RAND() * 100, 'test1');insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-13 13:03:25.816189
+UDAL XA RECOVER;

# 2023-04-13 13:03:41.763410
+UDAL XA RECOVER;

# 2023-04-13 13:04:03.666212
+UDAL XA START;

# 2023-04-13 13:05:20.339688
+commit;

# 2023-04-13 13:05:24.300745
+UDAL XA RECOVER;

# 2023-04-13 13:05:29.071586
+commit;

# 2023-04-13 13:05:30.135789
+UDAL XA RECOVER;

# 2023-04-13 13:07:49.757169
+UDAL XA START;

# 2023-04-13 13:12:49.235760
+select * from user;

# 2023-04-13 13:12:57.006524
+select count(*) from user;

# 2023-04-13 13:14:09.024872
+UDAL XA RECOVER;

# 2023-04-13 13:15:21.612190
+commit;

# 2023-04-13 13:15:22.707169
+UDAL XA RECOVER;

# 2023-04-13 13:15:34.811642
+select count(*) from user;

# 2023-04-13 13:18:10.864531
+select * from zookeeper_resource;

# 2023-04-13 13:34:56.380708
+set @var=1; 

# 2023-04-13 13:37:19.343059
+set @var=1;

# 2023-04-13 13:37:26.348955
+xa start '@var';

# 2023-04-13 13:37:30.394636
+xa recover

# 2023-04-13 13:37:40.955811
+insert into user (id, score, `name`) values(500, 10000, "hole5");

# 2023-04-13 13:37:50.825984
+use test_xa

# 2023-04-13 13:37:52.697701
+insert into user (id, score, `name`) values(500, 10000, "hole5");

# 2023-04-13 13:37:55.708697
+xa recover

# 2023-04-13 13:38:05.855147
+xa end '@var';

# 2023-04-13 13:38:08.073720
+xa recover

# 2023-04-13 13:38:31.941493
+xa prepare '@var';

# 2023-04-13 13:38:35.194340
+xa recover

# 2023-04-13 13:40:30.206183
+set `@var`=1;

# 2023-04-13 13:41:04.468601
+xa start @var;

# 2023-04-13 13:41:20.447380
+set @var='1';

# 2023-04-13 13:41:22.173724
+xa start @var;

# 2023-04-13 13:43:36.917305
+xa start uuid();

# 2023-04-13 13:44:47.462202
+select uuid();

# 2023-04-13 13:44:54.155595
+select @var;

# 2023-04-13 13:44:58.665376
+select uuid();

# 2023-04-13 13:45:00.972879
+select @var;

# 2023-04-13 13:45:30.405950
+xa start AUTO_INCREMENT;

# 2023-04-13 13:46:16.051336
+xa start;

# 2023-04-13 13:48:22.552291
+xa start select @var;

# 2023-04-13 13:48:31.890912
+xa start `select @var`;

# 2023-04-13 13:48:36.918314
+xa start `@var`;

# 2023-04-13 13:51:31.774740
+xa start @var;

# 2023-04-13 13:59:02.148122
+select * from `user`

# 2023-04-13 13:59:43.278823
+xa start 1;

# 2023-04-13 13:59:45.533815
+xa start ;

# 2023-04-13 13:59:50.065041
+xa start 

# 2023-04-13 13:59:54.939145
+xa start '1'

# 2023-04-13 14:00:01.423554
+xa start '1';

# 2023-04-13 14:01:46.717277
+xa begin;

# 2023-04-13 14:01:50.308083
+xa begin ;

# 2023-04-13 14:02:01.825405
+xa commit '1';

# 2023-04-13 14:02:12.090342
+xa end '1'

# 2023-04-13 14:02:15.496427
+xa begin ;

# 2023-04-13 14:21:24.580202
+show databases;

# 2023-04-13 14:22:13.790995
+select * from `user`

# 2023-04-13 14:22:16.646151
+use test_xa

# 2023-04-13 14:22:17.808947
+select * from `user`

# 2023-04-13 14:58:51.457491
+use test_xa

# 2023-04-13 14:58:53.231594
+select * from `user`

# 2023-04-13 15:00:33.139705
+xa recover

# 2023-04-13 15:00:44.097099
+xa recover

# 2023-04-13 15:01:03.546565
+xa rollback '@var';

# 2023-04-13 15:01:06.650179
+xa recover

# 2023-04-13 15:03:26.011220
+xa commit;

# 2023-04-13 15:09:09.421212
+XA START '0a17cf01-7265-4ba8-9d23-21e6939e0271';

# 2023-04-13 15:09:15.839966
+insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-13 15:09:22.904396
+XA END '0a17cf01-7265-4ba8-9d23-21e6939e0271';

# 2023-04-13 15:27:51.229775
+xa recover

# 2023-04-13 16:14:02.715877
+select * from `user`

# 2023-04-13 16:14:12.900625
+xa recover

# 2023-04-13 16:14:18.449944
+xa commit;

# 2023-04-13 16:14:21.720705
+show databases;

# 2023-04-13 16:14:35.640524
+xa recover

# 2023-04-13 16:14:52.479352
+commit;

# 2023-04-13 16:15:00.720187
+xa end '1'

# 2023-04-13 16:15:07.531594
+xa recover

# 2023-04-13 16:15:12.390923
+use test_xa

# 2023-04-13 16:15:13.876120
+select * from `user`

# 2023-04-13 16:15:23.505857
+select count(1) from `user`

# 2023-04-13 16:20:27.625096
+use UDALTEST;

# 2023-04-13 16:20:31.481039
+select * from user;

# 2023-04-13 16:20:37.795721
+select (1) from user;

# 2023-04-13 16:20:47.034928
+select count(1) from user;

# 2023-04-13 16:22:14.019428
+UDAL XA START;

# 2023-04-13 16:23:50.453357
+use UDALTEST;

# 2023-04-13 16:23:51.683003
+select count(1) from user;

# 2023-04-13 16:40:38.743098
+use UDALTEST;

# 2023-04-13 16:40:48.971977
+UDAL XA START;

# 2023-04-13 16:41:06.222137
+UDAL XA RECOVER xid 'dbproxy-0746814c-149856';

# 2023-04-13 16:41:20.277466
+UDAL XA RECOVER ;

# 2023-04-13 16:41:35.861840
+UDAL XA RECOVER xid '113095';

# 2023-04-14 14:31:40.997046
+UDAL XA START;

# 2023-04-14 14:33:39.849391
+use UDALTEST;

# 2023-04-14 14:33:43.807950
+UDAL XA START;

# 2023-04-14 14:33:49.267506
+insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-14 14:33:55.006787
+commit;

# 2023-04-14 14:34:25.245383
+UDAL XA START;

# 2023-04-14 14:34:27.105090
+insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-14 14:34:31.244451
+commit;

# 2023-04-14 14:35:48.042923
+UDAL XA START;

# 2023-04-14 14:35:50.621921
+insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-14 14:35:54.026250
+commit;

# 2023-04-14 14:46:02.692807
+UDAL XA START;

# 2023-04-14 14:46:05.076635
+insert into user (score, name) values(RAND() * 100, 'test1');

# 2023-04-14 14:46:08.225044
+commit;

# 2023-04-14 14:47:44.381933
+select count(1) from user;

# 2023-04-14 14:48:59.663507
+select * from user where id > 909001;

# 2023-04-14 14:49:08.343440
+select * from user where id > 900001;

# 2023-04-14 14:49:12.481748
+select * from user where id > 900010;

# 2023-04-14 14:49:18.838344
+select * from user where id > 900310;

# 2023-04-14 14:49:23.726334
+select * from user where id > 900510;

# 2023-04-14 14:49:28.206063
+select * from user where id > 900610;

# 2023-04-14 14:49:31.973654
+select * from user where id > 900810;

# 2023-04-14 14:49:35.345854
+select * from user where id > 901810;

# 2023-04-14 14:49:39.700013
+select * from user where id > 911810;

# 2023-04-14 14:49:43.929835
+select * from user where id > 904810;

# 2023-04-14 14:49:49.198642
+select * from user where id > 908810;

# 2023-04-14 14:49:52.134361
+select * from user where id > 907810;

# 2023-04-14 14:49:57.936212
+select * from user where id > 908610;

# 2023-04-14 14:50:03.887123
+select * from user where id > 908710;

# 2023-04-14 14:50:08.378100
+select * from user where id > 908810;

# 2023-04-14 14:50:14.232532
+select * from user where id > 908750;

# 2023-04-14 14:57:41.031404
+insert into user (id, score, name) values(908759, RAND() * 100, 'test1');

# 2023-04-14 14:57:49.980297
+UDAL XA START;

# 2023-04-14 14:57:56.595052
+insert into user (id, score, name) values(908760, RAND() * 100, 'test1');

# 2023-04-14 14:58:07.308928
+insert into user (id, score, name) values(908763, RAND() * 100, 'test1');

# 2023-04-14 14:58:09.767974
+COMMIT;

# 2023-04-14 14:59:30.100140
+UDAL XA START;

# 2023-04-14 14:59:40.038672
+insert into user (id, score, name) values(908764, RAND() * 100, 'test1');

# 2023-04-14 14:59:44.867401
+insert into user (id, score, name) values(908765, RAND() * 100, 'test1');

# 2023-04-14 14:59:46.636193
+COMMIT;

# 2023-04-14 15:07:25.515953
+UDAL XA START;

# 2023-04-14 15:07:44.253931
+insert into user (id, score, name) values(908766, RAND() * 100, 'test1');

# 2023-04-14 15:07:50.324048
+insert into user (id, score, name) values(908767, RAND() * 100, 'test1');

# 2023-04-14 15:07:51.852083
+COMMIT;

# 2023-04-14 15:08:32.968056
+UDAL XA START;

# 2023-04-14 15:08:39.187049
+insert into user (id, score, name) values(908768, RAND() * 100, 'test1');

# 2023-04-14 15:08:44.051833
+insert into user (id, score, name) values(908769, RAND() * 100, 'test1');

# 2023-04-14 15:08:46.305227
+COMMIT;

# 2023-04-14 15:14:11.406921
+UDAL XA RECOVER;

# 2023-04-14 16:16:15.371067
+UDAL DT START;

# 2023-04-14 16:16:29.388802
+insert into user_1 (id, score, name) values(1, RAND() * 100, 'test1');

# 2023-04-14 16:16:41.457178
+select * from `user_1`;

# 2023-04-14 16:17:00.330688
+insert into user_1 (id, score, name) values(2, RAND() * 100, 'test1');

# 2023-04-14 16:17:04.222177
+commit;

# 2023-04-14 16:17:07.231436
+select * from `user_1`;

# 2023-04-14 16:17:31.160312
+UDAL SHOW HELP

# 2023-04-14 16:18:04.380954
+UDAL DT SHOW VARIABLES

# 2023-04-14 16:19:42.551267
+UDAL SHOW HELP

# 2023-04-14 16:20:05.554849
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:20:12.099328
+UDAL DT START;

# 2023-04-14 16:20:13.694389
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:20:22.411597
+insert into user_1 (id, score, name) values(3, RAND() * 100, 'test1');

# 2023-04-14 16:20:23.792966
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:20:41.477616
+update `user_1` set name = 'black' where id=1;

# 2023-04-14 16:20:43.257960
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:20:50.800220
+select * from `user_1`;

# 2023-04-14 16:23:31.741560
+update `user_1` set name = 'black' where id=2;

# 2023-04-14 16:23:34.184576
+select * from `user_1`;

# 2023-04-14 16:23:38.472206
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:23:47.932409
+update `user` set name = 'black' where id=2;

# 2023-04-14 16:23:50.132915
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:24:02.762084
+select * from `user` where id = 2;

# 2023-04-14 16:24:05.596854
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:27:03.645917
+SHOW WARNINGS;

# 2023-04-14 16:28:05.004695
+delete from user where id=1;

# 2023-04-14 16:28:07.719190
+SHOW WARNINGS;

# 2023-04-14 16:28:10.763479
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:29:30.641997
+UDAL DT SHOW COMPENSATION DETAIL

# 2023-04-14 16:29:44.950024
+select * from `user_1`;

# 2023-04-14 16:32:26.021544
+UDAL DT SHOW COMPENSATION DETAIL

# 2023-04-14 16:32:30.108674
+UDAL DT SHOW COMPENSATION

# 2023-04-14 16:32:40.123489
+select * from `user_1`;

# 2023-04-14 16:43:43.672409
+commit;

# 2023-04-14 16:43:45.560774
+select * from `user_1`;

# 2023-04-14 16:44:37.141014
+commit;

# 2023-04-14 16:44:39.121583
+select * from `user_1`;

# 2023-04-14 16:45:24.370829
+use UDALTEST;

# 2023-04-14 16:45:25.495249
+select * from `user_1`;

# 2023-04-14 16:48:56.173930
+delete from user_1 where id=1;

# 2023-04-14 16:49:01.259932
+select * from `user_1`;

# 2023-04-14 16:49:24.862749
+delete from user_1 where id=2;

# 2023-04-14 16:49:28.332217
+select * from `user_1`;

# 2023-04-14 16:50:10.359354
+insert into user_1 (id, score, name) values(3, RAND() * 100, 'test1');

# 2023-04-14 16:50:17.186305
+insert into user_1 (id, score, name) values(4, RAND() * 100, 'test1');

# 2023-04-14 16:50:28.273609
+select * from `user_1`;

# 2023-04-14 17:16:24.095383
+insert into user_1 (id, score, name) values(4, RAND() * 100, 'test1');

# 2023-04-14 17:18:27.703250
+insert into user_1 (id, score, name) values(6, RAND() * 100, 'test1');

# 2023-04-14 17:18:45.219929
+insert into user_1 (id, score, name) values(7, RAND() * 100, 'test1');

# 2023-04-14 17:20:04.634398
+UDAL DT START;

# 2023-04-14 17:20:14.131585
+insert into user_1 (score, name) values( RAND() * 100, 'test1');

# 2023-04-14 17:20:33.740263
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-14 17:21:56.055819
+use UDALTEST;

# 2023-04-14 17:22:03.738626
+UDAL DT SHOW COMPENSATION DETAIL

# 2023-04-14 17:22:06.787217
+UDAL DT SHOW COMPENSATION

# 2023-04-14 17:25:20.808903
+UDAL DT SHOW COMPENSATION DETAIL

# 2023-04-14 17:25:51.335795
+commit;

# 2023-04-14 17:25:58.104273
+UDAL DT SHOW COMPENSATION 

# 2023-04-14 17:35:39.103675
+UDAL XA START;

# 2023-04-14 17:35:43.512114
+UDAL XA RECOVER;

# 2023-04-14 17:36:06.264556
+delete from user where id>2;

# 2023-04-14 17:37:19.823838
+select * from `user_1` limit 10;

# 2023-04-14 17:37:28.484991
+select * from `user` limit 10;

# 2023-04-14 17:37:32.339490
+select * from `user` limit 100;

# 2023-04-14 17:37:36.837406
+UDAL XA RECOVER;

# 2023-04-14 17:37:40.781667
+delete from user where id>2;

# 2023-04-14 17:38:28.556817
+UDAL XA RECOVER;

# 2023-04-14 17:39:45.189317
+UDAL XA START;

# 2023-04-14 17:39:48.716786
+delete from user where id>2;

# 2023-04-14 17:40:03.003016
+delete from user where id>20000;

# 2023-04-14 17:40:19.278368
+delete from user where id>10000;

# 2023-04-14 17:40:29.033716
+delete from user where id>500;

# 2023-04-14 17:40:39.702259
+select * from `user` ;

# 2023-04-14 17:40:49.327114
+delete from user where id>50;

# 2023-04-14 17:40:54.726238
+select * from `user` ;

# 2023-04-14 17:42:45.369457
+select count(1) from user;

# 2023-04-14 17:59:44.773096
+UDAL XA START;

# 2023-04-14 17:59:48.027171
+delete from user where id>50;

# 2023-04-14 18:00:10.839247
+commit;

# 2023-04-14 18:00:27.397009
+UDAL XA START;

# 2023-04-14 18:00:31.321495
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-14 18:01:52.429141
+commit;

# 2023-04-14 18:02:07.856486
+select * from `user` ;

# 2023-04-14 18:03:19.770388
+delete from user where id>50;

# 2023-04-14 18:03:24.991730
+select * from `user` ;

# 2023-04-14 18:03:33.477955
+select count(1) from `user` ;

# 2023-04-14 18:03:42.248931
+delete from user where id>10;

# 2023-04-14 18:04:05.672205
+commit;

# 2023-04-14 18:04:07.157904
+delete from user where id>10;

# 2023-04-14 18:30:14.944392
+select count(1) from `user` ;

# 2023-04-14 18:30:19.143899
+delete from user where id>10;

# 2023-04-14 18:30:24.086118
+UDAL XA START;

# 2023-04-14 18:30:27.623343
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-14 18:31:04.576104
+commit;

# 2023-04-14 18:33:18.154710
+select * from `user`;

# 2023-04-14 18:33:27.144199
+select count(1) from `user`;

# 2023-04-14 18:37:24.571654
+delete from user where id>10;

# 2023-04-14 18:37:38.029961
+UDAL XA START;

# 2023-04-14 18:37:42.230831
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-14 18:40:39.361413
+commit;

# 2023-04-14 18:41:45.505863
+select count(1) from `user`;

# 2023-04-17 09:16:51.037113
+use UDALTEST;

# 2023-04-17 09:16:55.433886
+show tables;

# 2023-04-17 09:21:32.927003
+UDAL XA START;

# 2023-04-17 09:21:36.331767
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 09:23:38.639185
+UDAL XA RECOVER;

# 2023-04-17 09:24:00.767314
+commit;

# 2023-04-17 09:25:33.991505
+UDAL XA RECOVER;

# 2023-04-17 09:28:43.103035
+show databases;

# 2023-04-17 09:28:50.811183
+use test_xa

# 2023-04-17 09:28:55.146329
+show tables;

# 2023-04-17 09:29:47.903136
+xa start '1';

# 2023-04-17 09:29:50.597812
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 09:30:22.187308
+xa recover

# 2023-04-17 09:30:42.336380
+xa end '1';

# 2023-04-17 09:31:03.114318
+show master status

# 2023-04-17 09:31:17.545510
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 09:34:15.614550
+xa prepare '1';

# 2023-04-17 09:35:43.423246
+select * from `user`;

# 2023-04-17 09:35:53.179877
+delete from user where id>10;

# 2023-04-17 09:37:23.373991
+xa recover

# 2023-04-17 09:37:40.093478
+delete from user where id>10;

# 2023-04-17 09:37:46.658048
+use test_xa

# 2023-04-17 09:37:48.487188
+delete from user where id>10;

# 2023-04-17 09:43:41.302264
+xa recover

# 2023-04-17 09:44:09.427718
+xa commit;

# 2023-04-17 09:44:13.355358
+xa commit '1';

# 2023-04-17 09:46:19.802117
+select count(1) from `user`;

# 2023-04-17 09:46:27.913916
+select * from `user`;

# 2023-04-17 09:52:45.685846
+UDAL XA START;

# 2023-04-17 09:52:49.204527
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:03:21.481847
+use test_xa

# 2023-04-17 10:03:24.377126
+xa commit '1';

# 2023-04-17 10:03:35.182530
+xa start '1';

# 2023-04-17 10:05:19.707040
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:05:56.291341
+xa end '1';

# 2023-04-17 10:06:54.625062
+xa prepare '1';

# 2023-04-17 10:08:04.762668
+xa commit '1';

# 2023-04-17 10:11:07.496223
+select sleep(2);

# 2023-04-17 10:11:22.626432
+xa start '1';

# 2023-04-17 10:11:24.951697
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:11:28.958243
+xa end '1';

# 2023-04-17 10:12:04.647538
+xa prepare '1'; select sleep(10); xa commit '1';

# 2023-04-17 10:22:23.209922
+shwo processlist;

# 2023-04-17 10:22:29.246785
+show processlist

# 2023-04-17 10:23:17.705226
+UDAL XA RECOVER;

# 2023-04-17 10:23:35.905655
+UDAL XA START;

# 2023-04-17 10:23:37.854629
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:24:05.889059
+show sleep(4); commit;

# 2023-04-17 10:24:18.777181
+show sleep(1);

# 2023-04-17 10:24:28.575640
+select sleep(4); commit;

# 2023-04-17 10:25:42.283583
+UDAL XA START;

# 2023-04-17 10:25:48.449965
+UDAL XA RECOVER;

# 2023-04-17 10:25:56.388680
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:28:29.845589
+commit;

# 2023-04-17 10:29:45.880408
+UDAL XA RECOVER;

# 2023-04-17 10:29:52.983349
+select * from `user`;

# 2023-04-17 10:30:09.139677
+delete from user where id>10;

# 2023-04-17 10:30:12.795960
+select * from `user`;

# 2023-04-17 10:30:53.224840
+UDAL XA START;

# 2023-04-17 10:31:03.105258
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:31:31.664212
+commit;

# 2023-04-17 10:34:57.447107
+UDAL XA START;

# 2023-04-17 10:35:00.420021
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 10:35:08.028422
+commit;

# 2023-04-17 10:35:31.047424
+select * from `user`;

# 2023-04-17 10:57:59.176707
+delete from user where id>10;

# 2023-04-17 10:58:18.798220
+UDAL XA START;

# 2023-04-17 10:59:18.620955
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:00:28.778421
+commit;

# 2023-04-17 11:00:44.079269
+select * from `user`;

# 2023-04-17 11:02:01.301744
+UDAL XA START;

# 2023-04-17 11:02:03.356760
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:02:18.987398
+UDAL XA RECOVER;

# 2023-04-17 11:02:42.896953
+select * from `user`;

# 2023-04-17 11:03:52.724074
+UDAL DT START;

# 2023-04-17 11:04:35.234889
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:04:38.865524
+select * from `user`;

# 2023-04-17 11:06:00.948324
+commit;

# 2023-04-17 11:09:04.179142
+select * from `user`;

# 2023-04-17 11:09:06.127534
+delete from user where id>10;

# 2023-04-17 11:12:23.443025
+UDAL DT START;

# 2023-04-17 11:12:35.334281
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:12:36.458673
+select * from `user`;

# 2023-04-17 11:12:38.018719
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:12:49.849519
+select sleep(30); commit;

# 2023-04-17 11:13:31.058505
+select * from `user`;

# 2023-04-17 11:14:16.031970
+UDAL DT START;

# 2023-04-17 11:14:19.226717
+delete from user where id>10;

# 2023-04-17 11:14:22.495339
+commit;

# 2023-04-17 11:14:24.699660
+select * from `user`;

# 2023-04-17 11:14:29.694305
+UDAL DT START;

# 2023-04-17 11:14:31.433924
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:14:40.701722
+select sleep(60); commit;

# 2023-04-17 11:16:27.665344
+select * from `user`;

# 2023-04-17 11:17:44.412223
+begin

# 2023-04-17 11:17:49.900518
+select * from `user`;

# 2023-04-17 11:17:54.743216
+delete from user where id>10;

# 2023-04-17 11:17:58.079849
+commit;

# 2023-04-17 11:18:00.017424
+select * from `user`;

# 2023-04-17 11:18:04.537299
+begin

# 2023-04-17 11:18:12.189834
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:18:22.433282
+select sleep(30); commit;

# 2023-04-17 11:18:36.898964
+show processlist

# 2023-04-17 11:18:50.653262
+select * from `user`;

# 2023-04-17 11:19:08.848637
+use test_xa

# 2023-04-17 11:19:10.350150
+select * from `user`;

# 2023-04-17 11:19:21.038592
+begin

# 2023-04-17 11:19:24.076445
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:19:25.318303
+select * from `user`;

# 2023-04-17 11:19:33.838459
+select sleep(30); commit;

# 2023-04-17 11:19:52.359635
+select * from `user`;

# 2023-04-17 11:24:07.473130
+use UDALTEST;

# 2023-04-17 11:24:13.133280
+show tables;

# 2023-04-17 11:24:15.108307
+select * from `user`;

# 2023-04-17 11:24:27.575629
+UDAL DT START;

# 2023-04-17 11:24:30.398091
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 11:24:52.710257
+select sleep(30); commit;

# 2023-04-17 11:26:06.461475
+select * from `user`;

# 2023-04-17 11:36:11.851819
+show processlist

# 2023-04-17 11:37:55.184081
+select * from `user`;

# 2023-04-17 13:06:44.543764
+delete from user where id>10;

# 2023-04-17 13:07:51.864084
+UDAL DT START;

# 2023-04-17 13:07:54.129650
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 13:12:01.253417
+select * from `user`;

# 2023-04-17 13:12:17.243612
+SELECT * from information_schema.INNODB_TRX;

# 2023-04-17 13:12:33.743751
+UDAL DT RECOVER;

# 2023-04-17 13:12:41.633376
+show warnings

# 2023-04-17 13:13:44.349153
+commit;

# 2023-04-17 13:13:46.478854
+select * from `user`;

# 2023-04-17 13:13:48.399360
+delete from user where id>10;

# 2023-04-17 13:14:30.908901
+commit;

# 2023-04-17 13:14:40.043344
+select * from `user`;

# 2023-04-17 13:14:47.799259
+UDAL DT START;

# 2023-04-17 13:14:49.448724
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 13:57:08.422106
+select * from `user`;

# 2023-04-17 13:57:11.301022
+delete from user where id>10;

# 2023-04-17 13:57:29.608735
+UDAL DT START;

# 2023-04-17 13:57:31.064208
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 13:57:56.314426
+commit;

# 2023-04-17 13:58:30.934516
+select * from `user`;

# 2023-04-17 13:58:50.443577
+delete from user where id>10;

# 2023-04-17 13:59:21.797110
+UDAL DT START;

# 2023-04-17 13:59:24.256349
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 13:59:27.704057
+select * from `user`;

# 2023-04-17 13:59:39.386132
+commit;

# 2023-04-17 14:02:20.664801
+select * from `user`;

# 2023-04-17 14:02:31.610815
+delete from user where id>10;

# 2023-04-17 14:02:35.133960
+select * from `user`;

# 2023-04-17 14:19:45.503810
+UDAL DT START;

# 2023-04-17 14:19:48.005123
+select * from `user`;

# 2023-04-17 14:19:50.970986
+delete from user where id>10;

# 2023-04-17 14:19:53.218723
+commit;

# 2023-04-17 14:19:55.376574
+select * from `user`;

# 2023-04-17 14:20:01.192448
+UDAL DT START;

# 2023-04-17 14:20:04.190606
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 14:40:35.553489
+commit;

# 2023-04-17 14:40:41.298858
+UDAL XA START;

# 2023-04-17 14:40:43.444188
+UDAL XA RECOVER;

# 2023-04-17 15:41:38.171764
+UDAL XA START;

# 2023-04-17 15:41:44.065965
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 15:41:50.019522
+use UDALTEST;

# 2023-04-17 15:42:11.194115
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 15:52:33.193094
+UDAL XA RECOVER;

# 2023-04-17 15:54:52.298730
+UDAL DT START;

# 2023-04-17 15:54:56.153504
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 15:58:13.856187
+commit;

# 2023-04-17 16:50:28.950615
+use UDALTEST;

# 2023-04-17 16:50:30.223858
+delete from user where id>10;

# 2023-04-17 16:50:40.918803
+ls

# 2023-04-17 16:50:45.433553
+show databases;

# 2023-04-17 16:50:49.153867
+show tables;

# 2023-04-17 16:50:52.394457
+select * from `user`;

# 2023-04-17 16:55:38.216988
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 16:56:05.147218
+UDAL DT START;

# 2023-04-17 16:56:06.319547
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 16:56:12.634076
+commit;

# 2023-04-17 16:57:14.143562
+delete from user where id>10;

# 2023-04-17 16:57:16.784431
+select * from `user`;

# 2023-04-17 16:57:19.394668
+UDAL DT START;

# 2023-04-17 16:57:21.749751
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 16:59:12.658768
+commit;

# 2023-04-17 16:59:16.140832
+select * from `user`;

# 2023-04-17 17:00:33.022510
+delete from user where id>10;

# 2023-04-17 17:00:35.768274
+select * from `user`;

# 2023-04-17 17:00:38.663207
+UDAL DT START;

# 2023-04-17 17:00:39.878149
+insert into user (score, name) values( RAND() * 100, 'test1');

# 2023-04-17 17:01:15.341877
+commit;

# 2023-04-17 17:01:17.291782
+select * from `user`;

# 2023-04-17 17:02:17.613252
+delete from user where id>10;

# 2023-04-17 17:14:37.329910
+exit

# 2023-04-18 16:23:45.303747
+show databases;

# 2023-04-18 16:23:50.800979
+use airflow;

# 2023-04-18 16:23:55.101692
+show tables;

# 2023-04-18 16:24:01.079821
+select * from job;

# 2023-04-18 16:24:44.578289
+describe job;

# 2023-04-18 16:54:23.426121
+show tables;

# 2023-04-18 16:54:31.681910
+drop database aio;

# 2023-04-19 14:57:02.615683
+show databases;

# 2023-04-19 14:57:07.634783
+use aio

# 2023-04-19 14:57:09.599797
+show databases;

# 2023-04-19 14:57:15.056531
+show tables;

# 2023-04-19 14:58:30.245045
+select * from aio_node;

# 2023-04-19 15:20:15.839753
+select * from aio_user;

# 2023-04-19 15:28:06.076493
+describe aio_user;

# 2023-04-19 15:29:08.664640
+select * from aio_user;

# 2023-04-19 17:10:13.359878
+show tables;

# 2023-04-19 17:10:18.243981
+drop database aio;

# 2023-04-19 17:10:53.274598
+show databases;

# 2023-04-20 17:47:28.528106
+create database flask_sqlalchemy_test;

# 2023-04-20 17:50:28.070152
+use flask_sqlalchemy_test

# 2023-04-20 17:50:30.947409
+show tables;

# 2023-04-20 17:50:34.829293
+select * from `user`;

# 2023-04-21 11:33:43.526839
+show databases;

# 2023-04-21 11:33:47.568359
+use aio

# 2023-04-21 11:33:48.123289
+ls

# 2023-04-21 11:33:51.294235
+show tables;

# 2023-04-21 11:34:14.457384
+select * from aio_data_nodes

# 2023-04-21 14:11:31.714888
+select * from aio_total_task

# 2023-04-21 14:43:44.635941
+select * from aio_sub_task

# 2023-04-21 14:45:53.766626
+select * from aio_snapshot

# 2023-04-21 14:46:10.961897
+select * from aio_volumes

# 2023-04-21 14:47:58.527347
+select * from aio_sub_task

# 2023-04-21 14:50:14.218688
+select * from aio_total_task

# 2023-04-21 15:02:44.690940
+select * from aio_audit_operlog;

# 2023-04-21 15:41:25.109311
+select * from aio_total_task

# 2023-04-21 15:41:45.980582
+select * from aio_data_nodes

# 2023-04-21 16:18:21.722558
+delete from aio_data_nodes where id = 1;

# 2023-04-21 16:18:37.893523
+select * from aio_data_nodes

# 2023-04-21 16:19:04.153813
+delete from aio_data_nodes where id = 1;

# 2023-04-21 16:19:09.811223
+select * from aio_data_nodes

# 2023-04-21 16:19:31.417726
+delete from aio_data_nodes where id = 1;

# 2023-04-21 16:19:57.306808
+describe aio_data_nodes;

# 2023-04-21 16:20:17.229137
+select * from aio_devices;

# 2023-04-21 16:22:12.043120
+describe aio_devices

# 2023-04-21 16:23:23.441910
+delete from aio_devices where id = 1;

# 2023-04-21 16:23:28.855544
+delete from aio_data_nodes where id = 1;

# 2023-04-21 16:24:06.210809
+describe aio_total_task;

# 2023-04-21 16:24:33.689255
+delete from aio_total_task where id = 1;

# 2023-04-21 16:25:57.165704
+describe aio_sub_task;

# 2023-04-21 16:27:12.972334
+delete from aio_sub_task where id = 1;

# 2023-04-21 16:27:18.326045
+delete from aio_total_task where id = 1;

# 2023-04-21 16:27:27.434512
+delete from aio_data_nodes where id = 1;

# 2023-04-21 17:10:55.171626
+select * from aio_devices;

# 2023-04-21 17:11:03.286721
+select * from aio_data_nodes

# 2023-04-21 17:11:20.821478
+select * from aio_total_task

# 2023-04-21 17:11:38.864193
+select * from aio_sub_task

# 2023-04-23 11:14:06.183551
+show tables;

# 2023-04-23 11:14:08.342571
+show databases;

# 2023-04-23 11:14:14.838363
+create database flask_sqlalchemy_test;

# 2023-04-23 11:14:18.288716
+show databases;

# 2023-04-23 11:14:22.519154
+use flask_sqlalchemy_test;

# 2023-04-23 11:14:57.239887
+drop database flask_sqlalchemy_test;

# 2023-04-23 11:15:06.518039
+ls

# 2023-04-23 11:15:09.532004
+exit

# 2023-04-23 11:26:15.006118
+show databases;

# 2023-04-23 11:57:22.242299
+use aio

# 2023-04-23 11:57:26.351560
+show tables;

# 2023-04-23 13:43:45.626935
+show databases;

# 2023-04-23 13:43:51.145681
+use aio

# 2023-04-23 13:43:53.800729
+select * from aio_sub_task

# 2023-04-23 13:44:00.070327
+select * from aio_data_nodes;

# 2023-04-23 16:49:13.029438
+select * from aio_resource;

# 2023-04-23 16:50:25.840382
+describe aio_resource;

# 2023-04-23 16:50:44.755752
+select * from aio_user;

# 2023-04-23 16:51:16.825461
+describe aio_user;

# 2023-04-23 16:51:35.214544
+describe aio_role;

# 2023-04-23 16:51:42.086669
+select * from aio_role

# 2023-04-23 16:52:15.041480
+describe aio_user;

# 2023-04-23 16:52:30.807250
+select * from aio_user;

# 2023-04-23 16:52:45.866695
+select * from aio_user_role_rel

# 2023-04-23 16:53:38.892648
+select * from aio_role_feature;

# 2023-04-23 16:55:07.948048
+select * from aio_feature;

# 2023-04-23 16:55:37.603985
+select * from aio_role_feature;

# 2023-04-24 09:02:19.935648
+select * from aio_user;

# 2023-04-24 09:02:45.570973
+update aio_user set is_default_pwd=0 where id=1;

# 2023-04-24 09:18:55.515462
+select * from aio_resource;

# 2023-04-24 09:19:29.671433
+select * from aio_data_nodes;

# 2023-04-24 09:20:06.016315
+select * from aio_node;

# 2023-04-24 09:21:41.433040
+describe aio_node;

# 2023-04-24 09:22:37.683063
+select * from aio_node;

# 2023-04-24 09:23:01.999030
+select backup_unit_id,storage_id from aio_node;

# 2023-04-24 09:23:24.333421
+select * from backup_unit_;

# 2023-04-24 09:23:26.659160
+select * from backup_unit;

# 2023-04-24 09:25:31.356064
+describe aio_node;

# 2023-04-24 09:35:09.804836
+select * from backup_unit;

# 2023-04-24 09:35:24.653762
+describe backup_unit;

# 2023-04-24 09:39:58.695872
+show grants

# 2023-04-24 09:40:23.369320
+show grants for 'root'@'%'

# 2023-04-24 09:40:28.394645
+show grants

# 2023-04-24 09:47:57.428503
+select * from aio_notice;

# 2023-04-24 10:02:24.144226
+select * from policy;

# 2023-04-24 10:03:02.421045
+describe policy

# 2023-04-24 10:11:54.871741
+select * from crontab

# 2023-04-24 10:12:43.117669
+describe crontab

# 2023-04-24 10:12:54.608278
+select * from policy_job;

# 2023-04-24 10:13:56.534536
+describe policy_job;

# 2023-04-24 10:23:20.920989
+select * from sub_crontab

# 2023-04-24 10:23:55.398498
+describe sub_crontab

# 2023-04-24 10:24:09.105086
+select * from sub_crontab

# 2023-04-24 10:50:39.492878
+select * from policy_job;

# 2023-04-24 15:09:09.779206
+use airflow;

# 2023-04-24 15:09:14.983501
+select * from connection;

# 2023-04-24 16:09:55.146781
+use aio;

# 2023-04-24 16:10:06.958782
+select * from aio_timeline_point;

# 2023-04-24 16:21:54.691268
+select * from crontab_;

# 2023-04-24 16:21:57.076388
+select * from crontab;

# 2023-04-24 17:09:59.414394
+select * from policy_job;

# 2023-04-24 18:11:59.945025
+use aio;

# 2023-04-24 18:12:00.920989
+select * from policy_job;

# 2023-04-24 18:12:08.822142
+use aio;

# 2023-04-24 18:12:41.568233
+select * from policy_job;

# 2023-04-25 10:02:01.885111
+select * from crontab

# 2023-04-25 10:02:09.011345
+select * from crontab_;

# 2023-04-25 10:39:53.708827
+use airflow;

# 2023-04-25 10:40:14.200178
+show tables;

# 2023-04-25 10:40:25.032069
+select * from task_instance;

# 2023-04-25 11:26:17.589209
+select * from task_instance where dag_id = 'storage_size_update'

# 2023-04-25 11:33:27.661998
+select * from task_instance ;

# 2023-04-25 11:33:38.595211
+select * from task_fail;

# 2023-04-25 11:33:49.588665
+select * from task_reschedule;

# 2023-04-25 11:35:12.572471
+show index table task_instance;

# 2023-04-25 11:35:32.250251
+select * from task_instance;

# 2023-04-25 11:37:07.656232
+select dag_id,task_id,run_id from task_instance;

# 2023-04-25 11:39:44.651660
+select dag_id,task_id,run_id, start_date from task_instance;

# 2023-04-25 11:46:52.632510
+select dag_id,task_id,run_id,try_number,start_date from task_instance;

# 2023-04-25 11:48:44.874357
+select * from dag;

# 2023-04-25 11:49:48.923277
+select dag_id,task_id,run_id,try_number,start_date from task_instance;

# 2023-04-25 11:52:02.555287
+select * from dag;

# 2023-04-25 11:55:12.609223
+select * from dag_run;

# 2023-04-25 11:59:57.343760
+show index from task_instance;

# 2023-04-25 12:11:01.444934
+select * from dag_run;

# 2023-04-25 12:15:01.623360
+show index from task_instance;

# 2023-04-25 12:15:12.032654
+select dag_id,task_id,run_id,try_number,start_date from task_instance;

# 2023-04-25 12:16:48.895613
+select * from dag_run;

# 2023-04-25 12:17:11.828726
+select dag_id,task_id,run_id,try_number,start_date from task_instance;

# 2023-04-25 14:24:26.723705
+select * from dag_run;

# 2023-04-25 14:25:16.493166
+select * from task_instance;

# 2023-04-25 14:54:48.566417
+select * from dag_run;

# 2023-04-25 14:56:06.281954
+select * from task_instance;

# 2023-04-25 14:56:23.759228
+show index from task_instance;

# 2023-04-25 14:56:57.883559
+select * from task_instance;

# 2023-04-26 21:31:40.483581
+use airflow;

# 2023-04-26 21:31:44.022270
+select * from task_instance;

# 2023-04-26 21:37:35.334093
+select * from task_instance where dag_id = 'send_worker_rpm';

# 2023-04-26 21:37:44.275239
+select * from task_instance where task_id = 'send_worker_rpm';

# 2023-04-26 21:47:51.908322
+use airflow;

# 2023-04-26 21:47:56.422401
+select * from task_instance where task_id = 'send_worker_rpm';

# 2023-04-27 09:36:53.957766
+use airflow;

# 2023-04-27 09:37:08.478147
+select * from task_instance where task_id='test1'

# 2023-04-27 10:00:12.116846
+ls

# 2023-04-27 11:18:47.157804
+use airflow;

# 2023-04-27 11:18:51.342606
+select * from task_instance where task_id='test1'

# 2023-04-27 11:40:27.381816
+show tables;

# 2023-04-27 12:19:17.424259
+use airflow;

# 2023-04-27 12:19:24.292817
+select * from task_instance where task_id='test2'

# 2023-04-27 13:59:05.046778
+select * from task_instance where task_id='test1'

# 2023-04-27 14:10:11.995326
+select * from job where task_id='test1'

# 2023-04-27 14:10:14.904687
+select * from job 

# 2023-04-27 14:10:56.735683
+select * from job where dag_id = 'test_dag'

# 2023-04-27 14:41:38.603665
+select * from task_instance where task_id='test2'

# 2023-04-27 15:17:59.039715
+select * from job where dag_id = 'test_dag'

# 2023-04-27 15:18:05.083957
+select * from task_instance where task_id='test2'

# 2023-04-27 15:33:24.996915
+select * from task_instance;

# 2023-04-27 16:09:04.380294
+select * from task_instance where task_id='test2'

# 2023-04-27 18:35:43.560619
+use airflow;

# 2023-04-27 18:35:52.754424
+select * from log

# 2023-05-04 17:32:02.604379
+exit

# 2023-05-04 17:32:35.760360
+show databases;

# 2023-05-05 11:42:46.151546
+use test_xa

# 2023-05-05 11:42:49.152826
+use teledb;

# 2023-05-05 11:42:54.574733
+show tables;

# 2023-05-06 15:21:10.447572
+show variables like 'datadir';

# 2023-05-06 15:21:37.618906
+show variables like 'innodb_undo_directory';

# 2023-05-06 15:22:10.919924
+show variables;

# 2023-05-06 15:54:20.331382
+show variables like '%redo%';

# 2023-05-06 15:54:41.299278
+show engine innodb status \G

# 2023-05-06 15:57:24.634277
+show variables like 'innodb_log_buffer_size';

# 2023-05-06 15:57:30.303280
+show variables like 'innodb_log_buffer_size';

# 2023-05-06 16:22:40.917267
+show databases;

# 2023-05-06 16:24:37.522255
+show l

# 2023-05-06 16:24:39.625885
+show databases;

# 2023-05-06 16:24:43.714117
+use aio;

# 2023-05-06 16:24:46.453458
+show tables;

# 2023-05-06 16:26:44.091437
+use aio;

# 2023-05-06 16:27:23.425806
+select * from aio_node;

# 2023-05-06 16:27:52.762246
+select * from crontab;

# 2023-05-06 16:28:03.686953
+select * from sub_crontab;

# 2023-05-08 15:06:53.997479
+select HOST from information_schema.processlist;

# 2023-05-08 15:07:02.101608
+exit

# 2023-05-08 15:07:49.681606
+select HOST from information_schema.processlist;

# 2023-05-08 15:08:05.137022
+select HOST from information_schema.processlist as p where p.command like 'Binlog Dump%'

# 2023-05-08 15:08:57.613185
+show slave status;

# 2023-05-08 15:09:00.253513
+show slave status\G

# 2023-05-08 15:09:06.725740
+select slave status\G

# 2023-05-08 15:10:02.641149
+show slave status\G

# 2023-05-08 15:11:40.913131
+select HOST from information_schema.processlist as p where p.command like 'Binlog Dump%'

# 2023-05-08 15:13:18.905230
+select HOST from information_schema.processlist;

# 2023-05-08 15:13:29.312832
+select * from information_schema.processlist;

# 2023-05-08 15:31:22.149662
+show master status\G

# 2023-05-08 17:12:06.218701
+show databases;

# 2023-05-08 17:12:09.988977
+use UDALTEST;

# 2023-05-08 17:12:12.160801
+show databases;

# 2023-05-08 17:12:15.448595
+show tables;

# 2023-05-08 17:12:27.652405
+select count(1) from `user`;

# 2023-05-08 17:12:34.464724
+select count(1) from test

# 2023-05-08 17:12:49.250700
+drop table user_1;

# 2023-05-08 17:13:12.891674
+select count(1) from test;

# 2023-05-08 17:13:28.189731
+select * from test;

# 2023-05-08 17:14:34.389700
+use UDALTEST;

# 2023-05-08 17:14:37.700979
+select * from test1;

# 2023-05-08 17:14:46.037070
+show tables;

# 2023-05-08 17:15:06.724287
+select * from test1;

# 2023-05-08 17:15:08.339776
+select * from test;

# 2023-05-08 17:15:14.132280
+select * from `user`;

# 2023-05-08 17:15:43.479684
+delete from `user` where id > 10000;

# 2023-05-08 17:15:46.732397
+select * from `user`;

# 2023-05-08 17:15:56.556312
+select count(*) from `user`;

# 2023-05-09 14:27:24.594842
+show databases;

# 2023-05-09 14:29:57.483160
+use aio;

# 2023-05-09 14:30:19.570709
+select * from aio_resource;

# 2023-05-09 14:53:41.799334
+show databases;

# 2023-05-09 14:53:45.118637
+use aio;

# 2023-05-09 16:10:24.762838
+show tables;

# 2023-05-09 16:10:34.695523
+select * from aio_node;

# 2023-05-09 16:47:23.789078
+show variables like 'datadir';

# 2023-05-09 16:51:23.544569
+select * from aio_node;

# 2023-05-09 16:56:12.488564
+show columns table aio_node;

# 2023-05-09 16:56:16.221118
+show columns  aio_node;

# 2023-05-09 16:56:30.604405
+select columns table aio_node;

# 2023-05-09 16:58:28.442165
+show columns from aio_node;

# 2023-05-09 17:37:01.689110
+select columns table aio_node;

# 2023-05-09 17:37:04.973411
+select * from aio_node;

# 2023-05-09 17:41:39.406840
+show grants for 'root'

# 2023-05-09 17:45:19.841747
+show grants for 'black'

# 2023-05-09 17:47:17.085633
+show grants;

# 2023-05-09 17:47:33.305028
+show grants;

# 2023-05-09 17:55:24.566795
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER,BACKUP_ADMIN ON *.* TO 'root'@'%';
+FLUSH  PRIVILEGES ;

# 2023-05-09 17:55:46.685755
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER ON *.* TO 'root'@'%';

# 2023-05-09 17:56:10.830348
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER ON *.* TO 'test'@'%';

# 2023-05-09 17:57:46.005393
+select * from mysql.user;

# 2023-05-09 17:58:49.186384
+show grants for 'RDS_sla'@'%''

# 2023-05-09 17:58:52.866242
+show grants for 'RDS_sla';

# 2023-05-09 18:09:14.693527
+select * from mysql.user\G

# 2023-05-09 18:32:43.347594
+show databases;

# 2023-05-09 18:39:04.622534
+select * from mysql.user\G

# 2023-05-09 18:39:48.417155
+show databases;

# 2023-05-10 09:39:58.347184
+select * from mysql.user\G

# 2023-05-10 09:41:39.172065
+create USER BlackHole@'%' identified by '1358244533';
+

# 2023-05-10 09:41:42.971325
+select * from mysql.user\G

# 2023-05-10 09:42:03.379233
+show grants for 'BlackHole'@'%';

# 2023-05-10 09:42:25.939336
+grant all on *.* to BlackHole@'%' with grant option;

# 2023-05-10 09:44:41.662951
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER,BACKUP_ADMIN ON *.* TO 'BlackHole'@'%';

# 2023-05-10 09:44:50.519201
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER ON *.* TO 'BlackHole'@'%';

# 2023-05-10 09:45:07.767367
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'BlackHole'@'%';

# 2023-05-10 10:10:56.437423
+show databases;

# 2023-05-10 10:11:18.153261
+use aio;

# 2023-05-10 10:11:21.380650
+show tables;

# 2023-05-10 10:11:56.556216
+select * from backup_unit;

# 2023-05-10 10:12:43.728548
+select * from aio_resource;

# 2023-05-10 10:13:58.288601
+show grants for root;

# 2023-05-10 10:14:07.672400
+select * from aio_resource;

# 2023-05-10 10:14:21.208571
+select * from backup_unit;

# 2023-05-10 10:15:38.200818
+select * from aio_resource;

# 2023-05-10 10:15:52.488619
+select * from backup_unit;

# 2023-05-10 10:16:15.600812
+show columns from backup_unit

# 2023-05-10 10:16:33.301232
+show index from backup_unit;

# 2023-05-10 10:17:05.436570
+show columns from backup_unit

# 2023-05-10 10:21:16.860339
+describe test2;

# 2023-05-10 10:21:20.580145
+describe backup_unit;

# 2023-05-10 10:21:38.828672
+show create table backup_unit\G

# 2023-05-10 10:33:58.892068
+show create table aio_node

# 2023-05-10 10:34:41.855812
+select * from aio_data_nodes

# 2023-05-10 10:41:34.419429
+select * from backup_unit;

# 2023-05-10 10:41:45.119043
+select * from aio_resource;

# 2023-05-10 11:43:05.952143
+show grants for root;

# 2023-05-10 11:53:35.456917
+show grants;

# 2023-05-10 12:08:05.898974
+show grants;

# 2023-05-10 12:09:18.423965
+show grants for 'telemonitor'@'%';

# 2023-05-10 13:47:16.815063
+show variables like 'version';

# 2023-05-10 13:49:09.406203
+show processlist;

# 2023-05-10 13:49:55.265831
+select * from aio_node;

# 2023-05-10 13:56:28.546557
+create USER test@'%' identified by '1358';

# 2023-05-10 13:57:01.437906
+create USER test@'%' identified by '1358244533';

# 2023-05-10 13:57:37.042900
+create USER test@'%' identified by '1358';

# 2023-05-10 13:57:48.182070
+show grants for test;

# 2023-05-10 13:58:18.841434
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER ON *.* TO 'test'@'%';

# 2023-05-10 13:58:35.198537
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE ON *.* TO 'test'@'%';

# 2023-05-10 13:58:42.537979
+show grants for test;

# 2023-05-10 14:00:58.033734
+show grants for root;

# 2023-05-10 14:02:02.493723
+flush privileges;

# 2023-05-10 14:02:28.386513
+show grants for root;

# 2023-05-10 14:02:32.405965
+show grants for test;

# 2023-05-10 14:04:35.181929
+GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT, REPLICATION SLAVE, SUPER ON *.* TO 'test'@'%';

# 2023-05-10 14:05:09.501758
+show grants for 'telemonitor'@'%'

# 2023-05-10 14:07:13.669678
+GRANT  SUPER ON *.* TO 'test'@'%';

# 2023-05-10 14:07:22.044581
+GRANT SUPER ON *.* TO 'test'@'%';

# 2023-05-10 14:09:59.678176
+select * from mysql.user\G

# 2023-05-10 14:12:25.578677
+select * from mysql.user

# 2023-05-10 14:12:50.651313
+select * from mysql.user where Grant_priv = 'Y';

# 2023-05-10 14:13:22.879159
+select * from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y';

# 2023-05-10 14:13:45.878921
+select * from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y'\G

# 2023-05-10 14:17:56.094345
+select * from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y';

# 2023-05-10 14:18:04.019488
+select * from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y'\G

# 2023-05-10 14:18:52.075533
+select host from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y'\G

# 2023-05-10 14:18:59.695703
+select host,user from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y'\G

# 2023-05-10 14:19:03.599340
+select host,user from mysql.user where Grant_priv = 'Y' and Super_priv = 'Y';

# 2023-05-10 14:22:04.635495
+show grants for 'test'@'%'

# 2023-05-10 16:14:16.584585
+是哦为

# 2023-05-10 16:14:44.609078
+select * from resource_;

# 2023-05-10 16:15:03.265065
+show create table resource_;

# 2023-05-10 16:15:08.981152
+show create table resource_\G

# 2023-05-10 17:08:09.397623
+show databases;

# 2023-05-10 17:08:16.276303
+use udal_admin;

# 2023-05-10 17:08:17.823727
+show databases;

# 2023-05-10 17:08:22.675898
+show tables;

# 2023-05-10 17:08:57.756043
+select * from udal_sys_oper_log;

# 2023-05-10 17:10:41.024902
+select * from udal_app_category;

# 2023-05-10 17:26:29.168407
+show processlist;

# 2023-05-11 08:58:38.303186
+show databases;

# 2023-05-11 08:58:48.565960
+use aio;

# 2023-05-11 08:58:50.781931
+show tables;

# 2023-05-11 09:32:46.278124
+select * from aio_restore;

# 2023-05-11 09:32:52.973527
+select * from aio_resource;

# 2023-05-11 09:33:49.657315
+select * from aio_node;

# 2023-05-11 09:35:05.886132
+select * from aio_node

# 2023-05-11 09:35:14.698197
+select * from aio_node where db_type='goldendb'

# 2023-05-11 09:35:16.881653
+select * from aio_node where db_type='goldendb';

# 2023-05-11 09:35:39.357668
+show create table aio_node;

# 2023-05-11 09:35:42.817298
+show create table aio_node\G

# 2023-05-11 09:36:08.350330
+show create table aio_node;

# 2023-05-11 09:36:21.326551
+show create table backup_unit\G

# 2023-05-11 09:36:52.869862
+select * from backup_unit;

# 2023-05-11 09:37:22.585239
+select * from aio_resource;

# 2023-05-11 09:37:44.497638
+select id,resrc_db_type from aio_resource;

# 2023-05-11 09:37:59.294279
+select * from backup_unit where resrc_id = 183;

# 2023-05-11 09:39:42.542613
+select * from aio_node;

# 2023-05-11 09:39:44.442540
+select * from backup_unit where resrc_id = 183;

# 2023-05-11 09:39:54.374223
+select * from aio_node where backup_unit_id=295;

# 2023-05-11 10:10:39.967056
+show databases;

# 2023-05-11 10:10:59.118098
+use UDALTEST;

# 2023-05-11 10:11:01.745490
+show databases;

# 2023-05-11 10:11:04.042071
+show tables;

# 2023-05-11 10:11:58.357364
+show databases;

# 2023-05-11 10:12:01.945500
+use TEST;

# 2023-05-11 10:12:07.128980
+select * from `user`;

# 2023-05-17 09:58:54.472045
+show databases;

# 2023-05-17 09:58:59.795817
+use aio'

# 2023-05-17 09:59:01.427866
+use aio;

# 2023-05-17 09:59:01.939576
+ls

# 2023-05-17 09:59:05.015476
+show tables;

# 2023-05-17 09:59:29.232119
+select * from aio_data_nodes;

# 2023-05-17 10:58:38.587464
+select * from crontab;

# 2023-05-17 10:58:44.940019
+select * from crontab_;

# 2023-05-17 11:01:07.684556
+use aio;

# 2023-05-17 11:01:12.180319
+show tables;

# 2023-05-17 11:01:20.519708
+select * from crontab_;

# 2023-05-17 11:01:22.496936
+select * from crontab;

# 2023-05-17 11:37:14.178994
+select * from 

# 2023-05-17 11:37:23.164105
+select * from snapshot_;

# 2023-05-17 11:38:11.219456
+select * from backup_unit;

# 2023-05-17 11:38:34.123182
+show create table backup_unit\G

# 2023-05-17 11:40:01.867696
+show create table sync_node\G

# 2023-05-17 11:42:10.027927
+select * from sync_node;

# 2023-05-17 11:43:18.987825
+select * from sub_crontab

# 2023-05-17 11:45:10.471223
+show create table crontab_\G

# 2023-05-17 11:48:23.958806
+show create table backup_unit_\G

# 2023-05-17 11:55:59.681591
+use aio;

# 2023-05-17 11:56:15.253005
+show create table crontab_\G

# 2023-05-17 11:57:02.132352
+show create table sub_crontab\G

# 2023-05-18 09:03:54.837330
+use aio;

# 2023-05-18 09:04:09.761121
+use airflow;

# 2023-05-18 10:08:49.173044
+set global TRANSACTION ISOLATION LEVEL READ COmmitted;

# 2023-05-18 10:09:07.852312
+SELECT @@GLOBAL.tx_isolation, @@tx_isolation;
+

# 2023-05-18 10:09:33.152929
+select @@tx_isolation;

# 2023-05-18 10:09:47.405562
+show variables like 'version';

# 2023-05-18 10:10:00.293377
+SELECT @@GLOBAL.tx_isolation, @@tx_isolation;
+

# 2023-05-18 10:10:05.075984
+SELECT @@GLOBAL.tx_isolation;

# 2023-05-18 10:10:10.412753
+select @@GLOBAL.transaction_isolation, @@transaction_isolation;

# 2023-05-18 19:41:59.844561
+show use;

# 2023-05-18 19:42:03.519896
+show databases;

# 2023-05-18 19:48:09.496987
+show variables like 'version';

# 2023-05-18 20:06:49.039384
+SELECT @@GLOBAL.tx_isolation, @@tx_isolation;
+

# 2023-05-18 20:07:12.751503
+SELECT @@GLOBAL.tx_isolation, @@tx_isolation;

# 2023-05-19 12:08:11.759305
+use aio;

# 2023-05-19 12:08:15.358647
+use airflow;

# 2023-05-19 12:08:23.334287
+select * from job;

# 2023-05-19 12:29:07.037577
+SELECT task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:19:04.400475')

# 2023-05-19 12:31:41.617739
+SELECT task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:25:49.400688')
+

# 2023-05-19 12:32:15.394840
+SELECT job.latest_heartbeat, task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:25:49.400688')
+

# 2023-05-19 12:40:02.490470
+SELECT job.latest_heartbeat, job.state, task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:34:11.860644')

# 2023-05-19 12:41:16.962289
+delete from job where 1;

# 2023-05-19 12:42:59.770385
+SELECT task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:37:33.075284')

# 2023-05-19 12:43:19.554120
+SELECT job.latest_heartbeat, job.state, task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:37:33.075284')

# 2023-05-19 12:43:49.193240
+select * from job;

# 2023-05-19 13:53:10.831743
+select * from task_instance;

# 2023-05-19 14:08:42.140364
+select * from job;

# 2023-05-19 14:15:08.045787
+select * from task_instance;

# 2023-05-19 14:18:20.590338
+select * from task_instance

# 2023-05-19 14:35:33.526465
+select * from dag_run;

# 2023-05-19 14:43:49.791244
+select * from job;

# 2023-05-19 14:43:52.158062
+use airflow;

# 2023-05-19 14:43:53.405738
+select * from job;

# 2023-05-19 14:53:25.146002
+SELECT job.latest_heartbeat, job.state, task_instance.try_number, task_instance.task_id, task_instance.dag_id, task_instance.run_id, task_instance.start_date, task_instance.end_date, task_instance.duration, task_instance.state, task_instance.max_tries, task_instance.hostname, task_instance.unixname, task_instance.job_id, task_instance.pool, task_instance.pool_slots, task_instance.queue, task_instance.priority_weight, task_instance.operator, task_instance.queued_dttm, task_instance.queued_by_job_id, task_instance.pid, task_instance.executor_config, task_instance.external_executor_id, task_instance.trigger_id, task_instance.trigger_timeout, task_instance.next_method, task_instance.next_kwargs, dag.fileloc, dag_run_1.state, dag_run_1.id, dag_run_1.dag_id, dag_run_1.queued_at, dag_run_1.execution_date, dag_run_1.start_date, dag_run_1.end_date, dag_run_1.run_id, dag_run_1.creating_job_id, dag_run_1.external_trigger, dag_run_1.run_type, dag_run_1.conf, dag_run_1.data_interval_start, dag_run_1.data_interval_end, dag_run_1.last_scheduling_decision, dag_run_1.dag_hash
+FROM task_instance JOIN job ON task_instance.job_id = job.id AND job.job_type IN ('LocalTaskJob') JOIN dag ON task_instance.dag_id = dag.dag_id JOIN dag_run AS dag_run_1 ON dag_run_1.dag_id = task_instance.dag_id AND dag_run_1.run_id = task_instance.run_id
+WHERE task_instance.state = 'running' AND (job.state != 'running' OR job.latest_heartbeat < '2023-05-19 04:37:33.075284')

# 2023-05-19 15:22:36.876666
+use airflow;

# 2023-05-19 15:23:59.584539
+select * from job;

# 2023-05-19 15:30:14.408558
+select * from task_instance

# 2023-05-19 15:30:49.928862
+select * from job;

# 2023-05-19 15:31:14.485244
+select * from task_instance

# 2023-05-19 15:31:38.964902
+select * from job;

# 2023-05-19 15:31:53.368870
+select * from task_instance

# 2023-05-19 15:32:10.501634
+delete from job where 1;

# 2023-05-19 15:32:12.617885
+select * from task_instance

# 2023-05-19 15:32:16.265761
+select * from job;

# 2023-05-19 15:32:24.201890
+select * from task_instance

# 2023-05-19 15:32:35.557676
+select * from task_instance where task_id='t2';

# 2023-05-19 15:32:58.677532
+delete from task_instance where task_id='t2';

# 2023-05-19 15:33:01.913967
+select * from task_instance where task_id='t2';

# 2023-05-19 15:34:15.277179
+select * from job;

# 2023-05-19 15:34:27.509472
+select * from task_instance where task_id='t2';

# 2023-05-19 15:34:34.201363
+select * from job;

# 2023-05-19 15:34:38.757334
+select * from task_instance where task_id='t2';

# 2023-05-19 15:34:47.253884
+select * from job;

# 2023-05-19 15:34:55.961540
+use airflow;

# 2023-05-19 15:34:57.461542
+select * from job;

# 2023-05-19 15:35:31.753455
+select * from task_instance;

# 2023-05-19 15:35:44.881820
+select * from job;

# 2023-05-19 15:36:26.576223
+select * from task_instance where task_id='t2';

# 2023-05-19 15:36:30.425959
+select * from job;

# 2023-05-19 15:36:45.878296
+select * from task_instance where task_id='t2';

# 2023-05-19 15:36:49.517486
+select * from job;

# 2023-05-19 15:37:06.213060
+select * from task_instance where task_id='t2';

# 2023-05-19 15:37:15.632954
+select * from job;

# 2023-05-19 15:37:17.996920
+select * from task_instance where task_id='t2';

# 2023-05-19 15:37:38.065729
+select * from job;

# 2023-05-19 15:37:40.489390
+select * from task_instance where task_id='t2';

# 2023-05-19 15:49:10.488842
+select * from job;

# 2023-05-19 16:02:20.699244
+select * from task_instance where task_id='t2';

# 2023-05-19 16:02:28.528028
+select * from job;

# 2023-05-19 16:02:31.139142
+select * from task_instance where task_id='t2';

# 2023-05-19 16:05:27.783098
+select * from job;
